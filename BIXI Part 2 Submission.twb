<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='stations+ (bixi)' inline='true' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0opjyuc176tfw71dyqojo0anordp'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[stations].[code]' />
              <expression op='[trips].[start_station_code]' />
            </expression>
          </clause>
          <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='stations' table='[stations]' type='table' />
          <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='trips' table='[trips]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[stations].[code]' />
              <expression op='[trips].[start_station_code]' />
            </expression>
          </clause>
          <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='stations' table='[stations]' type='table' />
          <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='trips' table='[trips]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ROUND TRIPS %' datatype='real' name='[Calculation_1195424230482837513]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END)/(COUNT([id]))' />
      </column>
      <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column caption='Membership Usage' datatype='real' name='[Calculation_735775591617052689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM(IF ([is_member] = 1) THEN 1 ELSE 0 END))/(COUNT([is_member]))' />
      </column>
      <column caption='Total Revenue (Amount)' datatype='real' name='[Calculation_814870062126034947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF([duration_sec]/60)&lt;=30 THEN 2.99 &#13;&#10;ELSEIF ([duration_sec]/60)&gt;30 AND ([duration_sec]/60)&lt;=45 THEN (2.99+1.8)&#13;&#10;ELSEIF ([duration_sec]/60)&gt;45 THEN (2.99+1.8+3) + 3*(1/15)*(([duration_sec]/60)-45)&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='3.4 is Hell' datatype='string' name='[Calculation_814870062136410141]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&lt;=30 THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_1195424230493417486]&gt;30 AND [Calculation_1195424230493417486]&lt;=45 THEN &quot;Medium&quot;&#13;&#10;ELSEIF [Calculation_1195424230493417486]&gt;45 THEN &quot;High&quot;&#13;&#10;END' />
      </column>
      <column caption='Revenue &lt;30' datatype='real' name='[Calculation_814870062139215911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&lt;30 THEN 2.99 END' />
      </column>
      <column caption='Revenue 30-45' datatype='real' name='[Calculation_814870062139322408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&gt;30 AND [Calculation_1195424230493417486]&lt;45 THEN 2.99+1.8 END' />
      </column>
      <column caption='Revenue &gt;45' datatype='real' name='[Calculation_814870062139449385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&gt;45 THEN (((1/15)*([Calculation_1195424230493417486]-45)*3)+(1.8+2.99)) END' />
      </column>
      <column caption='Non-Member Usage' datatype='real' name='[Calculation_814870062142681130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-[Calculation_735775591617052689]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[duration_sec]' peg='0' size='130' />
      </column>
      <column aggregation='None' datatype='integer' name='[Duration in minutes (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1195424230493417486]' peg='0' size='2.3' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='stations' datatype='table' name='[__tableau_internal_object_id__].[stations_6A8D2A6B21D741149B31B3DA965A9834]' role='measure' type='quantitative' />
      <column caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1195424230482837513]' derivation='User' name='[usr:Calculation_1195424230482837513:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_735775591617052689]' derivation='User' name='[usr:Calculation_735775591617052689:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Latitude,Longitude)' hidden='true' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='stations_6A8D2A6B21D741149B31B3DA965A9834' count='2e+06' enabled='false' units='sample-records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/MusaR/Documents/My Tableau Repository/Datasources/stations+ (bixi).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/16/2020 01:57:50 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='stations+ (bixi)' increment-value='%null%' refresh-type='create' rows-inserted='2000000' timestamp-start='2020-07-16 13:57:50.590' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>0</ordinal>
              <family>stations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>704</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>1</ordinal>
              <family>stations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>704</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LROOT_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>2</ordinal>
              <family>stations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>540</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>3</ordinal>
              <family>stations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>555</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>4</ordinal>
              <family>trips</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2000000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[start_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_date</remote-alias>
              <ordinal>5</ordinal>
              <family>trips</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>835786</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start_station_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_code</remote-alias>
              <ordinal>6</ordinal>
              <family>trips</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>704</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[end_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_date</remote-alias>
              <ordinal>7</ordinal>
              <family>trips</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>769964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_station_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[end_station_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_station_code</remote-alias>
              <ordinal>8</ordinal>
              <family>trips</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>586</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration_sec</remote-name>
              <remote-type>20</remote-type>
              <local-name>[duration_sec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration_sec</remote-alias>
              <ordinal>9</ordinal>
              <family>trips</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8866</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_member</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_member]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_member</remote-alias>
              <ordinal>10</ordinal>
              <family>trips</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stations_6A8D2A6B21D741149B31B3DA965A9834]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='stations' id='stations_6A8D2A6B21D741149B31B3DA965A9834'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[stations].[code]' />
                    <expression op='[trips].[start_station_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='stations' table='[stations]' type='table' />
                <relation connection='mysql.0opjyuc176tfw71dyqojo0anordp' name='trips' table='[trips]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Q1.1 2016-2017'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Membership usage 2016 &amp; 2017
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok]' value='66' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:id:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok] / [federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{7C921BC0-549F-4DDF-9D1D-FCBF2EDB49F3}' />
    </worksheet>
    <worksheet name='Q1.2.1 %'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Membership Percentage 2016&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='Count' name='[pcto:cnt:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='member' level='[yr:start_date:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[pcto:cnt:id:qk]' field-type='quantitative' max='0.20000000000000001' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[pcto:cnt:id:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok] / [federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok])</cols>
        <show-full-range>
          <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[start_date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{B3C7C6D8-EB61-4123-96AD-92962F71AE26}' />
    </worksheet>
    <worksheet name='Q1.2.2 %'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Membership Percentage 2017&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='Count' name='[pcto:cnt:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='member' level='[yr:start_date:ok]' member='2016' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[pcto:cnt:id:qk]' field-type='quantitative' max='0.20000000000000001' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[pcto:cnt:id:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok] / [federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{96967B7A-0441-44D1-990A-953F5B052737}' />
    </worksheet>
    <worksheet name='Q1.3 Member'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of rides done by members
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Membership Usage' datatype='real' name='[Calculation_735775591617052689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM(IF ([is_member] = 1) THEN 1 ELSE 0 END))/(COUNT([is_member]))' />
            </column>
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_735775591617052689]' derivation='User' name='[usr:Calculation_735775591617052689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='member' level='[yr:start_date:ok]' member='2016' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</column>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' field-type='quantitative' max='1.0' min='0.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok] / [federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{230050FA-9E58-49F5-8713-CF58A7496B9D}' />
    </worksheet>
    <worksheet name='Q1.4 Round'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stations sorted by percentage of roundtrips
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='ROUND TRIPS %' datatype='real' name='[Calculation_1195424230482837513]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END)/(COUNT([id]))' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1195424230482837513]' derivation='User' name='[usr:Calculation_1195424230482837513:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:name:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;10e avenue / Masson&quot;' function='range' level='[none:name:nk]' to='&quot;Basile-Routhier / Chabanel&quot;' />
                <groupfilter from='&quot;Basin / Richmond&quot;' function='range' level='[none:name:nk]' to='&quot;Bercy / Ontario&quot;' />
                <groupfilter from='&quot;Bernard / Clark&quot;' function='range' level='[none:name:nk]' to='&quot;Casgrain / Mozart&quot;' />
                <groupfilter from='&quot;Cathcart / Union&quot;' function='range' level='[none:name:nk]' to='&quot;Fullum / St-Joseph&quot;' />
                <groupfilter from='&quot;Garnier / du Mont-Royal&quot;' function='range' level='[none:name:nk]' to='&quot;Larivière / de Lorimier&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;LaSalle / Crawford&quot;' />
                <groupfilter from='&quot;Laurier / 15e avenue&quot;' function='range' level='[none:name:nk]' to='&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;' />
                <groupfilter from='&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;' function='range' level='[none:name:nk]' to='&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;' />
                <groupfilter from='&quot;Métro Jolicoeur (Drake / de Sève)&quot;' function='range' level='[none:name:nk]' to='&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;' />
                <groupfilter from='&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;' function='range' level='[none:name:nk]' to='&quot;Prince-Arthur / Ste-Famille&quot;' />
                <groupfilter from='&quot;Queen / Ottawa&quot;' function='range' level='[none:name:nk]' to='&quot;Wolfe / Robin&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
              <bucket>&quot;Parc Plage&quot;</bucket>
              <bucket>&quot;Gare Canora&quot;</bucket>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
              <bucket>&quot;Place du Commerce&quot;</bucket>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
              <bucket>&quot;Place Longueuil&quot;</bucket>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
              <bucket>&quot;La Ronde&quot;</bucket>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
              <bucket>&quot;Marché Atwater&quot;</bucket>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
              <bucket>&quot;Congres&quot;</bucket>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;de la Commune / King&quot;</bucket>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
              <bucket>&quot;Ann / William&quot;</bucket>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
              <bucket>&quot;Ottawa / William&quot;</bucket>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
              <bucket>&quot;Nazareth / William&quot;</bucket>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-André / Robin&quot;</bucket>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
              <bucket>&quot;Murray / William&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
              <bucket>&quot;Victoria Hall&quot;</bucket>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
              <bucket>&quot;Island / Centre&quot;</bucket>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
              <bucket>&quot;Greene / Workman&quot;</bucket>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
              <bucket>&quot;Clark / Evans&quot;</bucket>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
              <bucket>&quot;Square Victoria&quot;</bucket>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
              <bucket>&quot;Square St-Louis&quot;</bucket>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
              <bucket>&quot;University / des Pins&quot;</bucket>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
              <bucket>&quot;Milton / University&quot;</bucket>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Milton / Clark&quot;</bucket>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Square Phillips&quot;</bucket>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' value='114' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]' value='p0.0%' />
            <format attr='font-weight' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' value='bold' />
            <format attr='font-size' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' value='6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]</rows>
        <cols>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{A28B53EF-EA1C-43C2-8133-90B09AAC1110}' />
    </worksheet>
    <worksheet name='Q2.1  ROUND vs Member'>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='ROUND TRIPS %' datatype='real' name='[Calculation_1195424230482837513]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END)/(COUNT([id]))' />
            </column>
            <column caption='Membership Usage' datatype='real' name='[Calculation_735775591617052689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM(IF ([is_member] = 1) THEN 1 ELSE 0 END))/(COUNT([is_member]))' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1195424230482837513]' derivation='User' name='[usr:Calculation_1195424230482837513:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_735775591617052689]' derivation='User' name='[usr:Calculation_735775591617052689:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
              <bucket>&quot;St-André / Robin&quot;</bucket>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
              <bucket>&quot;Nazareth / William&quot;</bucket>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
              <bucket>&quot;Island / Centre&quot;</bucket>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
              <bucket>&quot;Ann / William&quot;</bucket>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
              <bucket>&quot;Milton / University&quot;</bucket>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
              <bucket>&quot;Square Victoria&quot;</bucket>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
              <bucket>&quot;Congres&quot;</bucket>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
              <bucket>&quot;Milton / Clark&quot;</bucket>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
              <bucket>&quot;Square St-Louis&quot;</bucket>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Victoria Hall&quot;</bucket>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Place Longueuil&quot;</bucket>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
              <bucket>&quot;Clark / Evans&quot;</bucket>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
              <bucket>&quot;Murray / William&quot;</bucket>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
              <bucket>&quot;Place du Commerce&quot;</bucket>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
              <bucket>&quot;Square Phillips&quot;</bucket>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ottawa / William&quot;</bucket>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
              <bucket>&quot;University / des Pins&quot;</bucket>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
              <bucket>&quot;Greene / Workman&quot;</bucket>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
              <bucket>&quot;de la Commune / King&quot;</bucket>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
              <bucket>&quot;Gare Canora&quot;</bucket>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
              <bucket>&quot;Marché Atwater&quot;</bucket>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
              <bucket>&quot;La Ronde&quot;</bucket>
              <bucket>&quot;Parc Plage&quot;</bucket>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' field-type='quantitative' fold='true' max='0.94235754281725037' min='0.68637945966549774' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]' field-type='quantitative' max='0.25558291180029724' min='-0.025981538639942195' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]' value='p0.0%' />
            <format attr='font-size' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' value='6' />
            <format attr='font-size' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]' value='6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230482837513:qk] + [federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk])</rows>
        <cols>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{E7653DA2-4311-48E4-97CC-8A670687AA96}' />
    </worksheet>
    <worksheet name='Q2.2 Member length'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='[Is Member]=1' datatype='boolean' name='[Calculation_1195424230493683727]' role='dimension' type='nominal' user:unnamed='Q2.2 Member length'>
              <calculation class='tableau' formula='[is_member]=1' />
              <aliases>
                <alias key='true' value='Member Usage' />
              </aliases>
            </column>
            <column aggregation='None' datatype='integer' name='[Duration in minutes (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1195424230493417486]' peg='0' size='2.3' />
            </column>
            <column-instance column='[Calculation_1195424230493417486]' derivation='Count' name='[cnt:Calculation_1195424230493417486:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1195424230493683727]' derivation='None' name='[none:Calculation_1195424230493683727:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration in minutes (bin)]' derivation='None' name='[none:Duration in minutes (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230493683727:nk]'>
            <groupfilter function='member' level='[none:Calculation_1195424230493683727:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230493683727:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' scope='rows' value='Count' />
            <format attr='title' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration in minutes (bin):qk]' scope='cols' value='Duration in minutes' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230493683727:nk] * [federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration in minutes (bin):qk])</cols>
        <show-full-range>
          <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[Duration in minutes (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{93D8F7F3-9B8A-4779-8272-D81AF777866A}' />
    </worksheet>
    <worksheet name='Q2.2 Non-Member length'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='[Is Member]=1' datatype='boolean' name='[Calculation_1195424230494081040]' role='dimension' type='nominal' user:unnamed='Q2.2 Non-Member length'>
              <calculation class='tableau' formula='[is_member]=1' />
              <aliases>
                <alias key='false' value='Non-Member Usage' />
              </aliases>
            </column>
            <column aggregation='None' datatype='integer' name='[Duration in minutes (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1195424230493417486]' peg='0' size='2.3' />
            </column>
            <column-instance column='[Calculation_1195424230493417486]' derivation='Count' name='[cnt:Calculation_1195424230493417486:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1195424230494081040]' derivation='None' name='[none:Calculation_1195424230494081040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration in minutes (bin)]' derivation='None' name='[none:Duration in minutes (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230494081040:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1195424230494081040:nk]' />
              <groupfilter function='member' level='[none:Calculation_1195424230494081040:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230494081040:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' scope='rows' value='Count' />
            <format attr='title' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration in minutes (bin):qk]' scope='cols' value='Duration in minutes' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230494081040:nk] * [federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration in minutes (bin):qk])</cols>
        <show-full-range>
          <column>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration in minutes (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{9AB225BD-2C9A-4A47-A79B-397BF9CE3009}' />
    </worksheet>
    <worksheet name='Q2.3 Map And duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of usage and duration of rides
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column-instance column='[Calculation_1195424230493417486]' derivation='Avg' name='[avg:Calculation_1195424230493417486:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:longitude:qk]' field-type='quantitative' max='-8165074.2332926393' min='-8211878.8185684532' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:latitude:qk]' field-type='quantitative' max='5716455.8035024982' min='5688201.2934096931' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[avg:Calculation_1195424230493417486:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:latitude:qk]</rows>
        <cols>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{385DB78C-780E-444F-8815-652DE8153E5A}' />
    </worksheet>
    <worksheet name='Q3.4 Failure'>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='3.4 is Hell' datatype='string' name='[Calculation_814870062136410141]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&lt;=30 THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_1195424230493417486]&gt;30 AND [Calculation_1195424230493417486]&lt;=45 THEN &quot;Medium&quot;&#13;&#10;ELSEIF [Calculation_1195424230493417486]&gt;45 THEN &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Revenue &lt;30' datatype='real' name='[Calculation_814870062139215911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&lt;30 THEN 2.99 END' />
            </column>
            <column caption='Revenue 30-45' datatype='real' name='[Calculation_814870062139322408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&gt;30 AND [Calculation_1195424230493417486]&lt;45 THEN 2.99+1.8 END' />
            </column>
            <column caption='Revenue &gt;45' datatype='real' name='[Calculation_814870062139449385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&gt;45 THEN (((1/15)*([Calculation_1195424230493417486]-45)*3)+(1.8+2.99)) END' />
            </column>
            <column-instance column='[Calculation_1195424230493417486]' derivation='Count' name='[cnt:Calculation_1195424230493417486:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_814870062136410141]' derivation='None' name='[none:Calculation_814870062136410141:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_814870062139215911]' derivation='Sum' name='[sum:Calculation_814870062139215911:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_814870062139322408]' derivation='Sum' name='[sum:Calculation_814870062139322408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_814870062139449385]' derivation='Sum' name='[sum:Calculation_814870062139449385:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062136410141:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139215911:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139322408:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139449385:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139215911:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139322408:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139449385:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[cnt:Calculation_1195424230493417486:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139215911:qk] + ([federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139322408:qk] + [federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139449385:qk]))</rows>
        <cols>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062136410141:nk]</cols>
      </table>
      <simple-id uuid='{3081AF56-835E-4F58-B449-4A45B43A9DE4}' />
    </worksheet>
    <worksheet name='Q3.5 Success'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Profit Per Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Duration in minutes' datatype='real' name='[Calculation_1195424230493417486]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Revenue &lt;30' datatype='real' name='[Calculation_814870062139215911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1195424230493417486]&lt;30 THEN 2.99 END' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_814870062139215911]' derivation='Sum' name='[sum:Calculation_814870062139215911:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139215911:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[sum:Calculation_814870062139215911:qk]</rows>
        <cols>([federated.0qtnujq14yzj3v1cnbbg516g3df7].[wd:start_date:ok] / [federated.0qtnujq14yzj3v1cnbbg516g3df7].[hr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{40871DC3-E100-4246-8B08-89F206563929}' />
    </worksheet>
    <worksheet name='Q4 My Own'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Non-Member Usage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0qtnujq14yzj3v1cnbbg516g3df7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qtnujq14yzj3v1cnbbg516g3df7'>
            <column caption='Membership Usage' datatype='real' name='[Calculation_735775591617052689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM(IF ([is_member] = 1) THEN 1 ELSE 0 END))/(COUNT([is_member]))' />
            </column>
            <column caption='Non-Member Usage' datatype='real' name='[Calculation_814870062142681130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-[Calculation_735775591617052689]' />
            </column>
            <column caption='SUM(IF [Is Member]=0 THEN 1 ELSE 0 END)' datatype='integer' name='[Calculation_814870062152093742]' role='measure' type='quantitative' user:unnamed='Q4 My Own'>
              <calculation class='tableau' formula='SUM(IF [is_member]=0 THEN 1 ELSE 0 END)' />
            </column>
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_814870062142681130]' derivation='User' name='[usr:Calculation_814870062142681130:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_814870062152093742]' derivation='User' name='[usr:Calculation_814870062152093742:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:longitude:qk]' field-type='quantitative' max='-8169776.8433964029' min='-8210668.7183114523' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:latitude:qk]' field-type='quantitative' max='5709286.0973179964' min='5695613.5325329984' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062152093742:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' />
              <size column='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062152093742:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:latitude:qk]</rows>
        <cols>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{FCC1A7F3-8AEC-47D9-BE9A-794D6F18AA2E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='6' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Q1.4 Round' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Q2.1  ROUND vs Member' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10500' id='9' name='Q2.1  ROUND vs Member' pane-specification-id='1' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='11' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='10' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Q1.4 Round' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Q2.1  ROUND vs Member' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10500' id='9' name='Q2.1  ROUND vs Member' pane-specification-id='1' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{426CAAF2-F65E-425D-93E8-8F508899C4A9}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Q2.2 Member length' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Q2.2 Non-Member length' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='7' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='6' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Q2.2 Member length' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Q2.2 Non-Member length' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{32B11E18-834A-41AD-A1E4-62B3E0A67FFA}' />
    </dashboard>
    <dashboard name='Interactive Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='8' param='horz' w='98400' x='800' y='50000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='49000' id='6' w='82400' x='800' y='50000'>
              <zone h='27125' id='17' name='Q2.2 Member length' w='51600' x='800' y='71875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21875' id='18' name='Q2.2 Non-Member length' w='51600' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Q1.3 Member' w='30800' x='52400' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='49000' id='7' is-fixed='true' param='vert' w='16000' x='83200' y='50000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10125' id='9' name='Q1.3 Member' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' w='16000' x='83200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='16750' id='15' name='Q4 My Own' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062152093742:qk]' w='16000' x='83200' y='60125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10125' id='16' name='Q4 My Own' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' w='16000' x='83200' y='76875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='14' name='Q4 My Own' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='20' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='19' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='14' is-fixed='true' name='Q4 My Own' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='16750' id='15' name='Q4 My Own' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062152093742:qk]' w='16000' x='83200' y='60125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10125' id='16' name='Q4 My Own' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' w='16000' x='83200' y='76875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='167' h='21875' id='18' is-fixed='true' name='Q2.2 Non-Member length' w='51600' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Q1.3 Member' w='30800' x='52400' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10125' id='9' name='Q1.3 Member' pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' w='16000' x='83200' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='27125' id='17' is-fixed='true' name='Q2.2 Member length' w='51600' x='800' y='71875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7DA224C5-732E-4A1B-BE03-413ABF434E52}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Q1.1 2016-2017'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_735775591601082370:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_735775591604068356:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:id:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[qr:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76D89A2D-19A8-4ED1-BA11-4D47FB08B251}' />
    </window>
    <window class='worksheet' name='Q1.2.1 %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_735775591609556999:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[qr:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE4D5CAE-4E7C-4A66-BC7B-8A8EA2A08FB9}' />
    </window>
    <window class='worksheet' name='Q1.2.2 %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_735775591611817996:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68F273F7-79CC-494B-844C-F31DDB6ADD0C}' />
    </window>
    <window class='worksheet' name='Q1.3 Member'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[mn:start_date:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7457B95F-9376-4B84-A017-0D30C22B70B8}' />
    </window>
    <window class='worksheet' name='Q1.4 Round'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7485F248-E976-4A69-A00A-602DBE126AF0}' />
    </window>
    <window class='worksheet' name='Q2.1  ROUND vs Member'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_735775591617052689:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{046A7CD8-D642-4373-96D2-EE2B185CB008}' />
    </window>
    <window class='worksheet' name='Q2.2 Member length'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230491983883:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230492561420:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230492856333:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230493683727:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Duration Sec (bin):qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:id:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:is_member:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C99B6A8-0DD6-47B6-8A24-281435582A9B}' />
    </window>
    <window class='worksheet' name='Q2.2 Non-Member length'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230494081040:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{760D8A6B-A022-43CF-9059-EEC86EA1C7F4}' />
    </window>
    <window class='worksheet' name='Q2.3 Map And duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[avg:Calculation_1195424230493417486:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[avg:Calculation_1195424230493417486:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_1195424230495965201:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F55EFBD1-F05E-4737-A0A7-5CA492612999}' />
    </window>
    <window class='worksheet' name='Q3.4 Failure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062134022165:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062134091799:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062134304793:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062134358043:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062134427676:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062136410141:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062138925093:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062138961958:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBA4AD45-9383-42B0-B963-479E48E0978D}' />
    </window>
    <window class='worksheet' name='Q3.5 Success'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062136410141:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E99E20A-433D-4E2B-9CCD-B26F380F5E00}' />
    </window>
    <window class='worksheet' name='Q4 My Own'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062152093742:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0qtnujq14yzj3v1cnbbg516g3df7].[usr:Calculation_814870062142681130:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_814870062151987244:qk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:id:ok]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:name:nk]</field>
            <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:start_station_code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6A88252-B10E-42A2-AF4B-F5AD1CCDC4BD}' />
    </window>
    <window class='dashboard' maximized='true' name='Interactive Dashboard'>
      <viewpoints>
        <viewpoint name='Q1.3 Member'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.2 Member length'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.2 Non-Member length'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[none:Calculation_1195424230494081040:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>false</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Q4 My Own'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{778A9F9E-9C14-4FD1-90AB-4F04A3A2B188}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Q1.4 Round'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.1  ROUND vs Member'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qtnujq14yzj3v1cnbbg516g3df7].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{00C606AB-9BA2-4589-B373-763C1651E05F}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Q2.2 Member length'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.2 Non-Member length'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{5416C8F2-8842-40BD-A6DB-852396AF9AB7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      36o9/j8SVVY9XvN98AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Interactive Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5hlR3nn/6k66ebO0z05SKPISCgjgUBkvAaDRTQGDNgLtjFO2F57vf79
      bOPs3XUgw4MNSAgjJIRAApFHCUkjTdJIk3Pq3H1zOKFq/zj33L6303T39MxIaL7PM09P3z63
      Tp0671v15ldorTXncR4vUMhzPYHzOI9zifMMcB4vaJxngPN4QeM8A5zHCxrnGeA8XtA4zwDn
      8YJGCwMUh49yzwMbG78/vf3peQ+4c/OjPPzkjsbvw8f28Y3v/Gieo7j86AcPzv/e25/Gr/+/
      OHyUgyfH5z3GebywMIkBjvH0k0/y7LExAHY8HRKyVj7PPr2NwdEcAOPDAxTLRbZt3UbZ9VsG
      3LnzMLt3bSNyLvz0wZ8xePxIfRyPZ57ezli+DMDA4CDZ4X6e3XOAwK+xY/s2ilUPUAwODLJr
      x3ZGssX6SJqDe3dyrH8EgNzoABVfs2/vXlR076d3NDHAMQ71Z0Er9u16hj0HjqIBFXjs3LGd
      fYeON+Zcyo+xZetW+odHAVC+y47t28gWK6extOfxfMAUEehlb/glHnng2zR7x77y+U8xUqjy
      3Tu/xLNHR9jy4Hf5yjfup1YtctvX7poy6JWrO9hxLAuqhisTxI3w86/+x+cZL1X5+pe/wGjZ
      57vf+i82Pr6N3Y89wD9/5quUKiVuu+NOAPY8s5XxUpXbPvcJ+vMuP7z36+w5NswTP/omm/f1
      88zjP+RLt93Bwf7Zd/mHvnMXe/rHOXnwGU6OVdi/czsj+Qr7t/yEn27ZT7Z/H5/5j6/j+z7/
      8Z9fAjRf+eLnyFdq3P7Fz5N31azjn8fzG+aUT6TNKzYs56Fth8LfvVFkZj2veOlLePkNF3PH
      3Y/TZ1jc+s530heDvQe/ytG923lg4xPccMsbANhw0yu4556fkFmf4YKrb2bnQ/eDN8q2HYcp
      K4tKfpgtO49ipbp5y5t+gYGdj9JeWcZLrlnLvgOHAbh4wzXc9JIbuLhbsOnZQ2zfuo3OZXlQ
      VcYef4rLO+Ham1/PdRd2z/qA6y65iLu/9xCpjh6uT9lUhWbnM9uRQQlTH4Ejw7z3t36TXkew
      b+9uKJ1k6+6TuGI7pfF+tu8d4OYXLVvURT+P5w6mMgBwyUtew6Of/wJmPAlmilopFDtGjx/B
      aeuE4kjL9asuupIPXXQlAPueAGGlsYIyT+yr8bZ3vJKdDwFmgks2XMlv/MZ7QCuqNY9v7Dn1
      BPftO0zfJa9mYOWFvO+Dv4EhoFqtsvnH36C7u5X4u1OafcfG2bCyg737DtJz9Yvo6lnK7/3e
      ixnd/yQPPLKd4pFn+fCHP0x5eB93PXiU5cs7eeKJp3nDdevoHxoDJ82GK6/iN97/DrTyqXnn
      I0V+ntHCAHYyQ4cRAwRvfNX1fPn7O0A43HTVWj792c9ixdr4tfe+i2ceyWHXhafe3iUtA/b0
      9iKBG6+6kMcO1TCAvqV9IOJce1kfn/7MZzEMgze+9d2N707cF3qX9AISrzjA5z/3OTqWX8jb
      13bR+8ob+eynP4VpmtzwijeQ6ewlNol9b/7FX+b2227nMQ/SfWu4eWUbu7c+xkObnkZj8PZf
      fS9HnTE++7nPs6Snjb6e9Vx0/VUM/vA+/uuePcQSCTAzXLk2w2c++zmkNHjLO99DzLHOwNKf
      x3MB4oUeDDd24gBP7DxKe0zz1O4TfPS/v/dcT+k8ziJe8AwAmqMH9jFe9rn88ksxpTjXEzqP
      s4jzDHAeL2ic9wSfxwsaLWrk+Pg4QpxaBNBao4HprtRaI4RojNN8wMw0tkaH30O0XBONFUFp
      1fo3BFK28rBhGNi2PeUelcr0Ti2tNQgYzm2mLbkOx+yc9rqZEKgAQxpN8xPIOazhdBBCoFUF
      IeMt6yalDNd8hsM6WpdoHrMd6gIPhIX2hpF2b8u14T1cxvNb6Mhczf7xfZzIH0YKyco4mPXn
      Wtp5A5bZQcttdI3Az2LavcxFpjBNE8tauHHBdV2CIJj2b0optNZIKafQXKCCxt/RkxggCIIp
      BDUZWmsCFRAE4YufjuCjMYQQU17kTFBKNV705HsJIdG61SEVEYRtTRB7LBYjHo9PeehSqYRS
      szi0NBwa+B6rl7yeJW3Xzvr8k+fgBz4jY98AoLPrrQ0mMA1jyvPMDTY0vVghBLVjf4/R9hpI
      XDXlaqUUgQqQQlLNhk7JWNfbwu8SgPbRwmn6hgH44OUo9n8Rp+O16CDcHMz0TdTcUU4O3k/c
      WU1fcgXHsgfpSfUxMv5tat4YjtVJ2jtCqvstSLMHgY/GZHzoTsqF7fSu+him1QuA749SKu2i
      re1lU+Ydj8cxDGOeaxMiCAJKpdKUz7XWKKXw/TAewDAMDMNo0KHrufiBj1YTm0mLDjAyMnJK
      Bogm4AU+sr5jR8QYfbf5wZqZoJlR5gql1SROFwgxMZYUEtu2icVimOZUt4bneRQKhVPeZzKz
      zhVaa2q1Q6A1pr0arTWGDBd++Mjfk+p8HbHU1fMetwXlreCsARlHqCLaCP0fqvgzZOJKtEiE
      jOcdRQDSWQuAVFnwx1H22mmH9Utbkc5qgspuBCED+OWtSHs50mw1b/tBkWxpL+3JizCNGGCC
      P4Q3+AWs3g9RrZ2gUnqW9p63IkRo0g6CArXqUWKJS1tO91gsRiKRWPByFAoFPM+b8rnWmiAI
      8H0fIUSDATSamusS1Im/GfNmAK01nu8hpUSKiaM5IlIp5RQGaLnhAsSDIAgQUuDYTkPEEUKg
      lMI0zZlFK63J5XKz7/7TwT2EX9yC2fnWOX/FD8JdRwjREEWqxS3YsbVIs6PlWuUNIM1uECag
      kNWdqNhlgARdQdWOImMXT7mHcA9DdT868xqEEATFp5CJy0DEp1yra6EnX9SZoTRyF7H0NdS8
      MVx3gPbOX8TzQyIyDAMpQnGhcPwfiXW8FurfM4321nHdIwgjDUYnaBdVegqZvBbEVLETJk7J
      cCwTKSXt7e0LogOYfUPTWuP7fmMjk1KCECitMKVBpVpFqVaxaUFKsGmYSDEh5gghWuStiCkm
      7/wLfWhpSDLpDOl0mkQigWmaGIaBZVmzjlkul+dP/A1MHder7ESrVl3CrR0BJvQA0fS9WOrq
      KcQPoHWTiEOArh2HuoingwrK7QegUniUSuHRie/Za9CZ14CqUBn+GtpejlYVSkO3oVWrSOAV
      t+AVt0y599jwd8iN/QTfH8Y0zAniRyP8QdIr/gdm4gqOHv0kR49+EmgNdtTeCDqoE6Cwkamb
      UO4JVJ3hIowO3cno0J1oJohRCEEikVgwHeTz+Tmd5kCDJqWU2KaFlJKY40zZ4KcNhTjVwJNF
      hehmQRCESoZWKKUQQmBb9oIfOBo7lUxNq9hG0Frjum7jyPM8L9whZ1CSTgl7LWZnuAMGKmgo
      21bsgik7nZAO1I/3iAlmm6fSCmktg/qGoMbuQ7S9vn4agDA7MTO3TP1uaRNalZHpW0A6WOnr
      GD3xeZJt109zJx+n+20t7ynZHeoFnT1vwnUHMc3ucN4NhtUQlNGGBiSZTCS2tT6TTF4z5W4R
      oznOhKiVyoS6lBQSYYT3mMlAMRc0y/YzoXnnjxiumfaklEhDtmyKC9IBppucUgrXcxFCYJmh
      dh+oAMMwMI158xmGYRCLxRriThAEaK1b5PzolCmVStPKhKeC1h5aVZFGevrnatI/mnWOuVnK
      PEAjmhgmCIKGxUZKGTJMbT/Ya0E0E5oPxScRqevQ9T1KCh+tghaFNvCGkGZ7/R71E8Qfodz/
      eRJLP4Qwl4D2CUqbMJJXMzpyPwCd3W9GoFB+Fmm1yvozIwBvCKwlREyhVYnC6H04ifXEUtec
      UodKp9MLtvzUarVpFd9mRNadaENuhtaamu9i1g031WoVWMAJMNk0CSFxKK0aN440b0MbBGp+
      u7BlWcTj8QahR3JdqVxCSgOlgsZCRztCJI7NGzpAaXdGOTDa+ZvFOV/5GIbZauoMxglqhzGa
      rDTVwhMAxDMTFhDDMEBNbBgAhnPh1PsGOfzsDzDjF4HRRTB2NwECo/31aO0jZDL8bhPxlkbu
      BiDZ/Wac9lchItld5aiN/wBDxMllH0UAmbaXEVT3U8r+hK5Vf8YEGQRobxBh9TJ559elzQSj
      d2N0vRWRDE+dWmkHlcKT1Mq7iaWmngzNiHblhaCZYGfDbKK2EALLMCdMxU4oNSxICY4GbP4s
      2t0sc3a5fDYYhkEmk2l8P1AB+Xwe1/UQok7oQoDWaKb3A5wJRAygdLjDRCdchKC8FXf8R8SX
      fYTC8F2kum9tEOn03hLwgwAj0pv8UTDaQJgNEbNF1HQPA1DKPgxAcsl7IdJFZKgA+9X94abj
      XDDlXkLAsZNfIZ/fSkf6cvqWvn/aEyAobcIduQu7+20YyesRwTDaG4fYReAPoLI/QLa/Dsy+
      cF1UmcLod3ASF+JMIxpFcBwHy7JOqbM1I7Su1TAMA9d1qdVqc/reXBFaMr35K8EzcZiU8rSI
      HyCVSjW+r5SiVCoT+AGWaTYsCDI6ZaRxWsSvUcDczJ7RyWYa5rTinJG4isSKP2kSAUTTv0n3
      LW/F7/9nrLr1SghB+eQnCEqbEELgnfwndHlrqzhhrwF7DcnuW0l03xpaa07+O4WT/95YL0MY
      uMNfa1h/IGSK4sg30NqlVD6IBpzExbjVw4yP3Iu0WsPJpb0SI3E50l4ZzlX5aF0nPLMP2f2+
      BvErf5TS6LdId762hfgHh+6kWj3Y+D0ej2PbdkMqmCvyhTz5Qp6x7Picdv/5IlrdRdk+J1uB
      FoJkMolhGCilqFQqZHNZarXqGdvhs6X9VNyRU184CbOZXIVMkl7yPjy3n/HhbwBTLVDCWYPR
      9prwVPFH0dojseyjGMnrQx9C22sQzhpAo7L3Q+0AAH7hYfzSFoRMorXGybwEJ/OSOc7aZNXy
      97O091Yy6WsblhkAs7oToYqhSGb2Yff8GsJaGv7RWoqIb0AE4415RPBrR6kVtuBVj866Nr7v
      Nwwic4XrhTu+1hpjjjrXQjF/7fQMwLZtHCdU7mq1WiNs4VRWldNBR/KixR1QlfDGvonVees0
      f/QRQQ5tdOFVDmDE1iKFoHjyE8Q6X4eZuql+2Sgi0iO8frzcIziJDa23qROinXkFAKWR0Aud
      6HobiZV/0XJymLELScVCHSMeW0M8tiYUU511xOLrAQhilwAaGeRBttr8IwizA4x0y3nppK7G
      dFYhza7GZ1r7xJ1lxGLrGp8ZhtF4t3OB1hrf8+ti4ML1hlPBkBKtjXMfDCelbHgFlVKLLuud
      C9ixC+lc8g6q2R+jVQldfBKv/5MIoajkHiaoHkJrTXLZRzFToUIZlLdROv6PBOVt4SBWH86y
      34W6OGKmb8bKvByvuBWvuLWuk2gMawmV/Bb82sEG8VerB1vEkGZIIVs2Fo3EG7uX2vF/hCA3
      9Qu6Qun4P+HlJ/wRXnkbhaGvIo3kpIsNMm2tSv98CDiav2VZoTf9DOp3kbXynJ0AUsqGfBgp
      fIVC4TQcV+cYwsLqnkimCdwBKuM/wE5chkxdhxW/CK2hbfnvoLVCeUMY1hJUdScidhmGswor
      dRXSWkJ5+A7s5OWYiStbbuHmNiKtTuzMLXh186zhrEDICU+wEIL+/tsAWLfuL1tjq/xRRF3Z
      boaRuLz+n9ScHrVW2kmtuJ1Ex6uRZqxx3+Z7xeNx4vGpHurZIITA932KxWJofUPDjGGXi4NF
      8QPM+WZCNCwBsVisJWSiWCziuu68xvODAEF9iUQYhXkm5cWZIAjwS09jJK+iNno3ZvJKjNiF
      KG8QjDhokEaGQl1csZxllMZ/QveqP0MHBYLaUfzyTpyuW1FBlvyxf8FOXUGi6xfDhzPaEEJQ
      Ov6PAMSX/3Ej3gXqXlYESpcZGPo2UkgydgpbV7E63wKECmjxyP+PnXkJVuZlIONUCk9ix1Zj
      RDL/TM9Xj1IFM2QeXUUFOaQZBr2VKwc5evIrrFr2PhLxdVOseadCFL/jeV4LDQwUdpFyuknZ
      PfN7IfPAWTkBhBDYtk08Hm9hsIj3KpXKvIk/GlepoBEXJAyjJRThbEFjYCRD2d3p/AUQTvhs
      Zg9jg+Fu3N33a8RS4TWWswrT7KQ0/A3GjWXs7v8+ccpcEbuUVOpyMiv/AGmkKJ/4BABGxxvw
      3SESve8PnXaNMJQAFRTRtBPogGLpacZzmzCNNO2JTlxvADP9EtzqMWynFxOFGQu9tW75GXJD
      3yCW2kB77/sBKBa3Uiw+S2/v2xoBbVCXy/MPIu0+ZPxKELHGzj8dksnkvDYiz/Mol8tTPu9L
      XzrnMRaKM34CSClpa2ubEickhGg8+OmIPVHIdMMNLuRpW6QWA0EQhEe4Dgt7SSOD748yOHw/
      8fgq2p1OioNf5emSy4AbijOdpuSi9gtYvfr3Uf44Xv4RAm+UXOEZQBFLbSAZX4tbeJzkst+l
      /8TnqVWP0LvsQ1jOeoSo0n/s30jFlpMwk8jYGqrl/VQLTxFLXUEicSFG6lqKYw9Qzj4ECNp6
      341Tj1bt77+NfH4LPelLaOt5a4uCeypEItBCIj3L5fKCTZ01bxgQONbs5XFmwhk/AaLdQClF
      tVqlUq3i+x5OLEbgTRzjSqmGc2s+gXNCCEzDnEh0IIw+FEJOOJrOMiKnmRACRChXa6UZHL6f
      XGE7ucJ24qt+m2G6EJzEEBBoqNWZWAVZBg//LfHkRcSCMdIGlCY51JufSwgwDQNIsrLr5QCM
      FXdTzX4NKUxMQNYOE/iDyPglVPObQi+FdDCsbkaO/xsAS5Z+gFRsGZWx7+LXjmHPgwGicPj5
      yv1BELQ8i9IBe0Y2cWnPjXP6vjlFEZ87/CA4swyQSCSwLAvP8ygWi/UsrvBUUEqhtMIQRhhz
      MylkYr6OLkOGUY3ROEordKAmYm7OIiKPcYu3HE08vopcYTummSFbeIZibYCUKalpzZin6Uyu
      pbPzZYwc+xcsZzmWCBVXQwjSqcuJ9bwNIVNg9zI+eAedna/EdFZiGB0obwC/dhw7dRNaFakO
      3lOfi0/GtJDSRgHV3KMI7aGBeOYGhJHCrYalK93yXqR06Fr5MQx7KVqDXztEtbCZdM/bGRq8
      i0zb9TjOymmfe76RnlECS7PlTwqDi7uvm/MYhlxYXkEoiagzxwCJRIJYLIbv+1NCWA1phMQZ
      ybL1kIZo91datThr5oroNIiYK1rgsxUyEUFNEy8F0NH2CtLJy7DMNgrl/QyNPQwoDARKQaly
      mMFcBxkM2nrejF89hKodwTAzyMTF4a6cuIzxgTvQqoxbOUzv2o8DkO3/IsofJx4U8EQKaXWj
      vBFiiUuxe98OMkVQO0Dp5BcQQCz5IpKdr6eU34Q0MiQz1zE2+F+AIpG4hLaOlyFiEzK4m9tI
      XI1hMXNE5nwD3SLdLxKBA1XFkDGkOPOqaRSUuCh3iuLzo0A4KSWmaTZMm9Oh9QgXGE3RkIY4
      vR1bSonQosFEZ1Mxjk65ZvaVQjbynh27D9C0py7j0nUf4+jAPQSl/fRl1lPxS6igQseKj1It
      7WR8+D7aMteS7H0nI4f/BoDuNf8LO7aKWnk3dmxVQ/dxkpdSLT7D4YHv4GmFKW3WJJZgigBk
      mqD0FLWRb2JLgac0QflZjh35F7LVQWIS4t4g0YoJqwNhLwMCTGct6dg6Csf/AQAjtm7aqM+5
      xvkUi0Usy2qIxM3IlQ/TmbpkAas+fzTCW05ngGQyOeuDR+7s2aC0qpvw1KKKKkKIc2IRik6h
      ZmW/2QAAoNxjuLmHqWKTsjspVROcyB+g5Ht0WIL29FYq4xsJNAhnFVobZJa8A9CQ/SHt8aUE
      nW/AsJchVAmNJtbxZpz213Fs3/8CwFduaL2pHqCW20g59wha+dhCEJMSw+rkeHEUjaaqQFR2
      0Zl5MZ6RQRU2USg+iZ2+HqfrrRSzP6XslelZ8bszvs+57v6TTZ3NOFvED1Fg5RxPgMnyrJSS
      TCYzq1hRrVanNW1F40WJ3AgxkU54lkWVM4nJirxSJcqFLSTSVyPtFcS6b6U6ch/d7ddhSQtv
      +FEKQE2kaU+/mISZIZt9lLH8Nlzl0tXxKoQ/hD/85TB/N3UDGoke/1Z4v463Ucg9QtqM4Sqf
      TlPgUCUw2yiWdhH4OaQQ+EgSS96D5xdo8x8lWzlJ2s4gDQsjcRl2bDW+3Y2q9WMmXzTxPDIO
      Mo4K8ih/HNNZ3fK8kxkgCmGOxWJTaGfBiUpnALMyQLOJMUqdk1KSTqdnJVTXdWc1a0V7SIvi
      KwSIieoQP28oF7YwPhwSa6rtZhBx2nveDvj4g3fSZVsMByar08uxjCRW+hrGCzsoFbZTKh8g
      bbXhpK/GyNwMQpAb+wnx9NXErdBJNDx6L7nc40ggbsToWfpuvLH7Ga+OMuQNI4AeyyCVuZSs
      myc/fDdJKVhiGWhdwux4F7nRBwDoWvn7eJgY9QyvZNstpNpfGdKDewyvdgyzoQiH72ryO6tU
      KlSr1SnlT6aTFrSO8qnPfmDC7AzAxDEeBAGGZZBKpaYtZ6G1plAsotXkKg5TIYVASANfBQ0h
      Rcp68kxzQvMcMV2OwnMNifTVLT8nYNK74iMoHbAiKFEa/HIjTj8eX0W+sJ1Aw0hxL0tTVyHa
      34hAw3C9L4OM4+cfJukXcSyTcd9H2L3I+KWIni7GD/0jlgBPQ1Vp7MoufnJyK+VAsSZusNIJ
      SSDwBrGdPqS9FLe0g9LwXaQAqx6rpLWPN/YtjMSLSLTdzPhQ2MehveftU/wuQRBQrVanDYGe
      7r0G9Rgkcx5m18XCrAwghUSJiaJL6XR62tIjADW3RrU6EcV5KmIUQmBKAz/ww+sJIz70PMMZ
      Ivs/hMn6z1UmkDJJMnPjtLucNNqRhATgrPozXC/H8ZO3s3LJf6M/v4eh/C4Ghx9j3CtzUXop
      QpVpW/IOUEUCEeD5OQRgCUGXaWLGOhBo/Ooh2s1wsyoEClsITroBY164QR2tSS5Z/laoHSLI
      PQRALHM9RuwCxoa+TXHwXnpkmljiUgiKeIUnw/nGLiaRnsh+mxztWalUGlbAqeswlQHOBeFH
      OOU2a9bTyFKp1IzEr5SiUq5MKHl6bp7dKCIv2kEMaWDOgXkiNMycC8hHWEgNoNNBxR1k096/
      puIOTjMXl0r+EbR2AZNi5QijuafIlw8wWjrSEBkHstt5pv8HDI49jlvajh75Lxi7F6WhqlQY
      HSoEVJ5l4Mg/MDB4N7UgjBpNS0mbaXCoOmHGrCmNmdiAZfcQ5i4oArcfzxujGlQIVIV89mfh
      xUYbiZV/yqBvcnz4foS9kqIOnXzNdOH7fqNq23Rr/FzboGY8AUzTbOTcplKpaWO6o4cslUoN
      T6DWC4/jX8jiRDvKfPOCp8ttPpOwzXZW9rwW25wac6/8LIXxn2A6y6hUT9Cevpp1K97PgYHv
      hkn7hORpirBIyUnPh/5QGY5Jg2TyYvzSbkyrB8PqplTaScUfC8XLupc5YQh2VQyONDFAzExj
      GTFc5RJosONrsdM3Us1uJCYlLjEy7WGugh8Ucf08I7ltgGDIc3jqxE/49Wv/quVZKpUKtm03
      0hlt227Z9c+FfhcFTU63SU5hANu2SSQSLdW1qtUqnue1KDNR0almnG2P62T/wVxxtnd/AEM6
      LO96+bT3NqwlLFn9P8nnHmN4KPTg9ud2U66Fp4UUAluA3fTuPKWxpOCk69Jr5UFLjMzLKHtj
      jPo7JkywhEYHV2nG/RoxCSCoBBpXefjuccrZjeF1MoVbPUwxuxFHQO+q30eY3YzlN3PgxB1o
      AmyrnUtX/xbSaGNNx4swhNVSwCBKbioWi404r+Z8j8kMUHUHsc12pJx70sx8YUiJH/ioaSID
      WmYT7fJR7cVCoUA2m6VarU4JWFtIGZLnEs7FUbz/5Nc40P/16f+ofeKxZfQseQupKYpyuPsj
      RFRminygyPsKT2lKlWNAQGH4bnRuI77WVHQo4kTR9BWlScsAxxBcl7FJmwLPL/LTvZ9gqB6M
      Z9hLyQ5/E09rKkozMHQvY/lNHBn8FprwGtfLUigfwpIOnfG+Fj9QlP6omgwh09WQajyy9nj2
      8KcYym1a+KLOAdFGPp2UMKU4rlIKy7JaJm5ZVktBo7nUaHku41zJoUvaZ45xKY58k1pxOx0r
      /xDDSNEeW0KhaBAIG6E9hKgTKWAQyvtjgSbQkPMDLkkIhn1FpynxNQRahwyjoaRC8k0ZkqoK
      PdUXJcLT/EjVpd+LkYj10p65Dpl7HIwUvtmJJuDk4D04qspM291kqaBSqfDFh7/Os/37+M2b
      3826nlUt1zefAEJYXL7mI9OKhYsNKeTkSi/AJAaIarcEQVjQKvrZXK0Bwt1/Ok/necyOdHxq
      yRIAHYxjJ8IcXaUVJw79HTV3hLVLXk1P56sZzv6Mo4PfxpRxpKog6sK9LTS2Icj6iuOuj1/f
      9TtNST6AVPIiTCNBObetca8O0yQd66XDGw5D0rUmnljNqpXvpzJ4O1LlcWLrsK12zNRVGJU9
      IA1qnsLT4YkzVDpJd1t4tkx2gB0cOcqnHryt8fs/3fqnQLi5VioVksnW6M2Y3Xv6C3saaGEA
      13VJpULNPpFIoJRqpCxGiMoQtpSXWyQGaD51XihM5Vf3kOv/Aqazivblv0dufCOeN4wUkDBT
      GDJGX+er6G67HiEEu/f/Nb4KoyctKTCEoMsy6mJOGEQYAI7hAAbj+aeBUAySgItizPNJKE1K
      Qo8lkf5h3OI2dO0ohpGk5g6gqgcRQYV45joMM8OGzE2UK0d54ug3KWe3c8nSN2EadotPSEpJ
      d6qTrmQHo6VxLuu7kKpbJaVTDeuQ4zgtBpZzjRYGiArOzlS3XWtNuTKRwOJ6HlLOvf5nZLKc
      3hs4UX1N67BpxdlWqp8LSKauIFc3PSZTVwChrGwaKVSQpcNQVIWkGChkPQlFAUZd3EkY9RL1
      uLjlXahwKXEEJA0JvqLiDlMFXBnGwxgIhsYepeZWse0OtDcQWpAKz5JIbaBtyT8ZligAACAA
      SURBVK8wNvQNirknuGndRzCMdqSY6nMxDIN0LMXt7/+/DBdHWdO5Aq0mTNVtbW14nvfcZYBE
      IhHWU5/GRBiZO/OFfKMphVIBql7qz7GdU4pDs9XUaSb+oJ7mONc6nM9XKH+Usf7b6Vj6YSxn
      TRhyYnawau3/BOrV0dxB9hz5NBev/m0cu4tk2w1kzA7io99lzNd4dbV4xA0Y8RRtpmJtzAzj
      qgCFRgJFBYFWJAxBta4ch38TlAIfHQxgCIHnDtCZfhGF4k6iuka+N0AsEYpvydgKIrKZ7BcK
      c75NEkGMlW1LG8kugQrQhMWupJTEY/NLmjmTaEmJjGy3lUoFwzBIJBINkcf1XLLZbJPcL1tq
      rUcJ780dW2B2e3sz4Ue/R/FBkVf355kB0D6VwhPE0zdMqdQQQakao7lNdLVd32Qq9KkUNjFU
      2Mt4fhtaa45WA9z6UvZZBntLPmsSBh22BA2+Di1BGk2XZWKicaRA1TPRDGnjBS4xGeoUvoak
      hCXxboTKIo0MPav+BJpyhZPJ5BT/UC6fo1qt1sPCw/eXSofhM7lcDtM0aW9rJ5vNnokVnTda
      GKBcLjcqLadSKRKJRCNfU2mN685es8cwDBw7rMHuBxMVwaYLUZgi8jCRFhmFUvzcM0AducJm
      EvF1WE29BPKlXYwXdrCq99YZg8Q0Af2jD/Hk0W/iNtYSBqqKmgpl/us6LGJGGGlbCTQBGlNI
      Os3WdS0rQcH3W/IYqkrTaxmsiJkIoHvlH2FYfY2/t7W1TRGXs7kcW4/s5NMP3sGh0eOs7VrB
      7776fdxw4ZUUigVisTgxx3nOlMBpMYxGLmwhBKZpEgQB+UIez/cIAv+UxNi8g88mvkwmfqUV
      QgqQoiWO6PlA/FE4xnyca0FQ5NjJLxEERYQQDI18n3LlIKCo1k4CmvHCDobGH8cPijOOIzBY
      2vlyetqurM8FyoGmVqcrBZysBlQDiAlBRPMaiW1NxN8oramqAFPAiapisFYvAixgTKeJJzeQ
      SF+L0cSgkW29MYZS7D1xiLs2P8Cv/scfsXHvJo6MnmTj3k288/O/zxP7tzV60AVBENKXCvAD
      H/8chke3MEDkBY5CH6JQ6MixMdNLjhjGtuxG8djI43aqoqiBCrBtG61BMtHV4/kQEq11mIAf
      qICgaTfbdOJBNp14cM5jXLTuz2lLX0O1NsCeQ/+baq2fVb238uL1/x/WKWzkQhjcuO4DLOt8
      BQNVxXCt9R0FGtKGZLltUO9TgSMCfG+sYRlqfj2dlsBV4GpQGjLJC8h0/QJ+cRsnj/8n3933
      Ax4+8hiu9lroYf/AEd707x/iz7/1L438jghe4PPvP76toQ9Era0mvn/2PfMRpliBIrkfoFat
      1QlYEtRFmskwDBPLNGfsyDEZk+V+IQSe6zX6OZ3tGJ3TRVQOZD6tUQ0jxcpl72/8Hq1HzOnj
      4rV/RMzpA+Qpib8xBwwuWfIyNp14FJjItjKlzY1r38Gq9FLGT3yaVY7J8ZpPTE6kiyJMytrB
      V3l8DYYUJE2NLcCKrWbDsjchjCQHyg4PDTzN5vHNANz5zD18/HV/zrreMGfg6OhJspWZ2xcd
      Hj0R5nsHAUrULYc0zeMcoYVCc7lcI7CtWCwSBAGO7eDYdujylhNyeVj0NIZTL319qmjMiPAn
      nyLN1R+iqM7nCyaiUFtPrOuXv4Lrl79iASNKYs4yFlK0uyuxlF+69NfpjPdiSZvOeC9vuvSD
      rOq4gYpfpFAPCOu0jDBilNA86imfipcPd3wArYlJQXfmUl5+0cdI2l0czA7wzzuO8/hQtfH+
      xirjfGHTlxvmzJvWX80HbrqVjkRmWpJe07U8FJEDhVJhgpWQrami5wJTCmMhpm/0HChV1wMk
      5gxizXQEPldEBKS1Dhfm3G4Miw7fH8WtHiWRmtrrF8JmE/n+zwGQWfphxALLfUxG1R1g18F/
      aPweBtWF+oAQglKgqCjNqDex4FVt8d9e9NdYRpLv797IXdu/xmihxEghJHbbNujujhG3He58
      z5cbliCtNUeGjvOWT36EE9mJsO/l7b3c/Vv/TsYJrUHxWBzDkNSqNcqVMG32XOVytIhANTcU
      eaJdefKETtUAY6HE3yiOpRW24yAIQ1g916VR00GIM1ot+EwjO/oAxcJmVqxZNW0CiA5yBPXu
      kDrILQoDVLwxToxvJkBioMJ11eFLrwGRQTPnt743L6hRrI1ycPQQ9+65g0y7QU9nmq37cpRq
      CtcNGBmpcsPFaybF9ghWL1nBd37ns9z51Hc5NHKctd0reO9NbyEdTzakikivNE2z0fFnPgiU
      WrQ6sFN0gPAGAUrrlp3+TBFfa9UEqFYqk64IEzoW3AfsOYL2rjeQSF42hfi19nHdfhynj3Tv
      rwIgm0yNC4UQgicOfIpSbQhbWqxywlNVAQFQ9BWeFFhS0GVJBt1QvxOEHuOh8hh3PHUfthOu
      uzepwbTrBtyy+pZpnWHdbZ381qt+Fd/3QEMmkyFfyEPdJB74PphGuKGGX5qz7qe1bvQ3dhYh
      AmFaqoqqZkWcOlc0W3BOZc2J2qlG9wsnGkyrK0yuaf98hGl2TSv+DA/fy+Ej/5ehoW9jJa7E
      SlzJopcD1169HIogIQWBDkuhlIK68i0FCSM8aYUAITRf2fZ5lH2cNW2ShCko1RSenuQ7qIZ+
      oclhDY5t47o1arVaI4o4yi/52cHN/MGdH+enux6bMUR5NvgqqM+RKdammRAZKqZDC/tGXNg8
      sdM9Zqa7cRQzHnVgjKrBRcejlBLbsid8Cs9T0adWb1LhNHVMqVV2Ucw9RqrtRpz4mat+rLXm
      hgs+Qv/4EwS5HyOFatRJ8nSoYjly4t2aYsIc6qp6VXZLIgX0xCFXlcQcC9syKJVdtIZULBma
      yFWA2URKUdOTUqmMbdt1PwmgNX9137+RrxZ5+sRuXnP5yzBNk5pbmzPPN9NToAIMPXcmmu6U
      afmmaZhhjq5olesWiumU4mjBJu/q0UkTOZWiZPnncqL7bFBKUcg/RSH/VOMzIQRjA3dQLT3L
      2MAd+EGejs5bWLP6D+npefOizyFudbJuyWtJ2h0tRcJsaZA2BBlDYhBlcvWSjK2k7GvGPYXV
      RBmFqmZwPDSvSilxHIuYafPSC68NxZFpNlfbsulob69HBdSTY9BctjQM+45+honz85Dnp6Gn
      U2G2nPEpVqDm4+J0QxEmTy4i/igBvjncIVBBo8N7dO/T7Tp5rhCdZlP6CQOj/V+gWt5NLHEJ
      ORVuAOuWf/CMzqdW2cPo0F143jiuNmk3dKh7aCgrRdZXrFz6DlKJC/jxrr/HUwEHCoq8B0Nj
      NQYLQQvdKa35nZd+gHff9BbK5TKmZRGbpQ+Y53tkc1lKboVULMXB4SOs711LzIkRcxzGs1n0
      HBrpaa1x/bDiXehknbq+88W0QSaLEYow+aiKToOouNbkWj6GNMASBIHf8CI/H4kfJhh/utl3
      Lf11fLcf015Kxp/ZcTTX+8xlk3LiF5PpfQ87Dv4rSnuUDUGPZaDRjHmKAOhKX8rA8P302TDi
      hamX7ZamYAlWd5gcHfeJ9OCOeIa3X/eLjZgv05q9oJVWmo/f/xnu27GRN264hb+99Q/RTIRJ
      J+LxGasItoxTpx/TXDypYIoOsFjydkusjworQTeHRTQ7vyIYUmJIe+pgzyOEfQECpJjp9JKY
      9nIALLNtQffwg3rQWn2N5yIm5vJPkZAghAQ0rtYESiME9Fk29sC/YtRK9NkGWsOqpMIQkrQt
      GxLO4bFQ6bx21ZUtifCnwmgxy307NlJ2K9y3YyN//IbfIO0kQk+w1jiOQ6VSOfVYYvH9BS3U
      vpgeuWiSgQparEGLJV49VxH4Ixw/8g8Ewcw9iHP5xygWt6L8cdDzKy4QGgYmJPpTeeA9P8/h
      ofs4MfIwVaWo1RXSnK9wteayZW9ieaIbN5iI9F0VM7kgbtJmCjptgdU0vBDwSxte2zCZh90c
      Z7fQdaXbeeMVt5Cw47xxwy20JzONdFvXdRFCtOScz4QzkR+yoBZJcy1F2KzMRsptdAr8PBI/
      hEWuCvlNpDPXU6ocYTy/mZV976B5r/H9LG5lL7mhr2PHVtO94vfmtPkordD1MIJQz1AzeuXr
      s2HrwX8lXz4MhJYeWfcEAySkoC/egaWrGNrHj60nX9qNARQCzQk3QAK+0tyzv4xhhAO0xy/k
      //zyx7Esi2w226gSPhtcz+X40Ek6km3EYnEKxQKpZArQJOIJPM+bsZT+mcSCqpHOlXgjRbZZ
      Vv15Jn4AIeyWXrnTaQKm2Y6ap/gTxdHYloWQksALTrmWSnuN2kIARj3CRBMyQ5udQvkFXAFS
      OnT0vQ8j9xi18l48kcHO7sJSOSrAVcsdikE4j52D+xgYHWT5kmVz9hPZls3Srj5KpYlOQc1h
      5DNVHTzTOGtdIqOfP8/EPxmpxHpS9WoPEOb2+kEhLGWoDZas/jMMo23Ou7+Uob/ENiw879Te
      +WL+CZKiSoGQ4DtNSVlpKspkedfLcNwD+G4/hg7Ln2stSLTdQqLtFjoAre6mz9vE/orH9qiE
      vRB0JIzG/+eDeCyGUgHlcrnO0BNhEVFG4dmuN3XWGOCFRPgRtCojhA31BPL9Rz5FuXKEsrao
      BjVWdr+SC/reMqexIjlba90oQjz7mgaMjz9K2pAkZZSeGAbDDQSCdOZq3JGDgMBJX02i/RUo
      FEJ7VIvbMYUmkbqC4vDj9FpGi6l/fdd6Uk6ywbhBEMy5QUYyETZNLJVK1GphdKlX7yFgGMbP
      JwMsBp6PJVNquR9jxi7AjF/W8nlQL2tSqByb95hCzK0c5PGBbzBeHSApRVg1oqnjuqlrDIw9
      zoXLf5PAz2FYfWTzm+gf/CSmNImpIqbVybK1f8HDozfw7ODGxriOmeaXN7wv9N43OS/ng0Q8
      QcyJUa3VqFQqjSbZ5yJFckEM0LDpz5DwEoU5LDahPleTZUayDxN3+kjG17d8Hu98U8OBpLXm
      glUfwfNzHBt9hELlGBf0/dKMY55O4bFSeTe53BOYQNZXKEIVvN2UuCKJY1RwSo/jli/Cqccn
      jWcfQ6kKrgIhTdLJS9Fa89K1b2VZ20Ucye4iYae5ctnL6c70UalUGuUPF9LxRUpJIh4nEY9T
      KBQwDINYLDYnf8BiYsEnwEzWojMl7jyXxahU4sJp+9VOFu2FsLCt7haxZzqLWvNOuBCm19rD
      EYJAhD0DckHIBLHMDVzY9zYCb4Rq9idUKvsZH30AJ/MS/NpJTCGoKcWID+u63xjOC8G6ziu4
      oPvFBIFPzIk1UmSj8pin2/IoEn983z/resAUKp5LUsupXshzoVP72UTMXoppZE553Uxr2/yZ
      Ugrf9/F9f9Y87JkQBHmyo99HijAXuNc2WWKFIlMqsR6BiWn1kep5N0a9u3outwmtfQT1grqR
      qagOGZla9fSRlfMtCjAZkWfX9/2zbg1aEAOcCguplPDzgkLlAIdmqAA9bTBWUxpo87pFEbNz
      fR9aVxkevJ3hgdtxayfRhGVNtNYknD7ihsXIyPfQTX1+U2230Lf6T2lvfylSxrHtPtLJ9Vy+
      5sONGkRCSmzbxqqHOzTL/s04Hfk9qjAdBuXNLcZ/sTCF3RYjFCJ6mLk6zJ5LOB3Ze/I4MxH8
      TGj2kzTnU8xlHr6fo5DfjmW1UW82hWlmsA3oWPZBRDYsQS5aSiRrTvTfTql8gOXL3kPVHaI6
      8gPakuvDdUBj1cvjRKmqMzU/rFarUwrfzhWR9ae9PSwCEIZSn53q4wvyBP88Y/JONt9mfc11
      kRaylqfDgJ43iGlmyI79mOzYTzGlZNnqP8YwlyCCLLp2GBIvbvqGz76Df4Pv55DOavK1LC9e
      91FMoxNpGBimgVurEXNiM/b2bUZ7Pfx5IajVajiOg+u62LZNPp8/K/VDX9jUPgmLIbJFUToL
      JYTZYtdnRkC1egAhbISI47uDSAGG2YGs6ya6dhiV+1Fj3GJhM4cOfpy21OWQuIYduSpOcgOm
      0YlphX3bvJqLQMyJ+IFZW+OeCs3BkVpr4vGzUz90UTQOrXWj6u/z+QSZzADz3YEja8bZgOdn
      MY0UQpiMjtxPdnwjUiZYtfpjZNpfDkCm/eWIqJZn4sUYyasaz1gu7yMICihV5UDJ43D+KDFn
      Cdc4DoE/UdZyPogaYy+EBqIQ+agioVVnwjPtG1gUBqhWq/i+38gBna6h3vMBi5kMtBiYSYfy
      /Cw79/81XR0vYWXfO6lVQ4eaUmU8f4xYfD098eYQDJ+h7GMsab8RvH40mrbOV3J49Am0srlu
      RVjD6LoVr8E/TRNkrVZb0O5tGEbDfxQxkG3blMql2UvkNEeqhh2U51UxYko+wFyTLCJExB/B
      dcOMnel6xJ4LzNeOvriEr6jWBhqV3uaLMJEojPlp3lVNI0VXx0toS21Aa01XzxsZHb4PJ7aS
      WGzNlHFcP8vRoftpT12CIx32Hr+NQMS5cv1fYJkZpLR48+UfwndHqFWPMHjyyyRSl9HV89Z5
      zVdrvWAGgAlGj/wBkXk0yiKc/qbN/62HZui59aqGWapCNJvhZoLrutO6sD3POy158FxhsXf9
      am2AfYf+D9XawILnA7pee7S5FL3Jit53kE6GSfWOs5plKz5CV/cvMV0jLClM4maSsdwmMJcg
      6vZ/22xDGmFDlErhWYYO/w2jJz6J749TLu1cgAPu9BKqIoealLLhE4gSqaSQU/5F+ta0hRfm
      2Kt62qoQp/oMQiKv1WoEQdDg2OYqD5E371yfBGdCjImS+k81dszpY/3ajxFzli7oPo1dTE88
      x1SxSOMVN2PG1iLqNYf86n4AzNiFeMpj04mneLp/kFXVfdycOs765e8Jx6wXHfBctyFJWEaC
      TM8vYDur52UUiN77XIPipkMz4ddqtQZNoZixakSUczLdXOaCFgaYD7FEO7/v+1OUlUiWi5jA
      cZwGk0Twff+UlaPPBuZrdoyqGyOZQ1BaVOtz4ZAibGOkVJX+wbtIJS8nkdjQZGYNqOUeBsBK
      hQxQLW4FIGav4TNPfprdw7tQwPbsbp4a+Ht+78Y/oi2xBsMw8Ty37tyq0LnsQwh/DDN1HfMV
      2aK1Ox1PblQ6HWjUDTVNc1YrVLMjEagztpxzsvyMDNCsEE7mqFqthud5jSoOpmm21PqZfBL4
      vt+wFDmOg9ZhO00hBIlE4jlhOZrLrqG0auhIZ7tSnR/kyOXDbo/J5BWhSCQEUpikln8UMNDa
      p5B/gkz3mwGTJ048SbG8h5f3mTw04KOA/krAYKVMV5vFWG4Pg9mnWN/7GnKDtxNLX02m592n
      Nc/TDWVodCmth39blnVKM+zpFE2b8S3OdPxFok9E/FFP4cley2aijnSJIAiTISr18odaa8rl
      8mkHU50O5mN3j1r+nHask3ah+LPw5xxhW71csPaP6e1568RG05iDCQiCIMfo6Pfw/QIgOVk4
      yWhNcbCgaJaIy56LW3Mn3pXZTab9ZhJ6cllKKI5/H63m5pVdjBO92RoEZ74o2ilHbxYNPM+j
      Uqk0Epkj4m92308nSkwOjWhGxATnOm5oTgwgwtqWC9v9NdS7rYsgS5D7KSKYX58s2+zEMOJY
      pjXtrmeaXay74G8b9UeXpZdR8uFoqVUhTNkpcA9i5jdyQec1oeMpdQWG1dF0VShXW/bSMKln
      DlisQLbmd2FZ1hk1q7e8ycnWnEhsgVBmr1Qqjd+bu0meinii66JTYHKk42LWeXnOIsii66US
      A60xl/8PtLkEtE9Q/Bno2d3+xdwjHD/8NxRzj8x8C3+UcnFL4/erl17NpT2t5Rcv7bmUte1r
      qeUewivvopZ7CABtr0V03BqO4w0xdOTvCLwh7MQGfFXv+XYKy8piMUDURjXaNJPJ5BnzDM84
      Y6VUQ1SJiDbqEB8ps/MxG06WsSNt33Gcs+L2PueBeUYHwuhAeYNkj/9v2lf8EdLqBZXDHf8B
      8fjFYEwtmx6hWjmACopUKwdItSTdTyA/9n3Khc30rV6FYXZhSYvfvu632dK/hZOFkyxLL+Pq
      pVdjShPRFnqLnfrPZkiznVTHq5BmO6oeG611vaDoDMtn15uoLCYiHdKyLOLxOEKIRU+YaQmG
      GxwcbPRuahZLopNgIcTfbNuNxov0B8MwiMfjZ8Vz3HDyybOvwDagSqFFxy+GxF/HdDH2DQRj
      4Q8k5cJ2EqkrWprVtVzqj+LVjhJLtlah1mgcJ4Zbm7nLZ1AIm3Mb6Zsa5Veid6a0xpiptqYQ
      pFKpRSf+hrRQrxQYtd91XZdicebGgfPFFCtQZKFpJv7oOJoP8Td7laOHiUyjkf6glMJ1XUzT
      PCsxNEorCEAJdU5KL5ZHvglAYsl7Wz6fjfgrJ/4FgPjyPyDd/oqWlNPJMMwujCn9BzR23Qw9
      V0Si8ESB4unfjWEYpNPpBqNEJvHFeJfRu4k5MXL5XKNObHTSLFbW2BQGqFarLbqAXw+MimT+
      +VhAouuaXdxAg/ijlxj5BM4kNK3ij9JqTsnls0FpDfPwfia6bz2t+0WYbf0rbj/FylGeHDrG
      WGWMa5bdyIalVxP4s7e5NdI3TfxfGiitEWLi2SYXJXAch0Qi0aCZUqnU2NjS6fQiPOWESTRe
      L6SVSYeRrbFYbNEYoEUEOn78eItJMlJWDcNoYYC5IGKi6DuRCBW2RJ1Qni3LOmve4vA4D235
      i1Fj0g/8+rPIGUWEuSLwR6fs3uEfQhEIo/OUYwgh2LL3L6l5Y2wZDzhWCXsC/Pb1f8KKzOqG
      sSGy4s0H0fuMxNbonUUV3bTWPHnsv1jbdT1re6+cU6nDuSDSAbK5LOl0umH9yuVyi2I+n9EK
      tFDij47o6P/NxD/ZbGqa5lkNlRAiLMu+WGXXo15qWqsGM0zBHKw85eJWThz+O8p1D27rTTrn
      QPxhuXOtNR3pyygHkPNU9BcOZ/cjhCAWmz6xxXX7yecfJzLTTofo+21tbcRiMbTWuK7b6Cra
      8jyLaNaOxKtUMoXvTazhYtHNtBQdBEFDZp/vzt8csyKEaNEfmok/KoPxfEbEUKZhzqxTqBy1
      8R+Ayk07Rin/KF7tKMn0NTixVQuax4HB+3l0799S87OsXfoOjgWXkK/TikCwpuNCbNueUXkc
      GXmAgYE7cd3Baf8upSSdTpNKpRp0UKlUKBaLLZvmdSvfRXdiXcPhGUULRGL0QmAYRqOzfPOp
      slgi8xQzaHN8T+SVW8jNmnf+yD4c6Q9SyoZZ6+cBsxoFjC6Sq/5qyo4Y+OPUqocQgGl109a1
      OB1ilFK868oP8sN93yFbDXWA1e3rGvrXdPPs7n4DqdSl2HZvC6EahkFbW9uUzW9ytO90Y9Zq
      tYb0EJVROR1r3+T1WywGaNEBhoaGGnJVNPH5hgg3TzQ6RZpjg4BFkw+fz3Brh6mU99He+Tpg
      YemYigApjLDQrA4QGIj6xuXXrW3R6TtXpbHZ2ZWIJ6Z999VqdU7zNQzjtN91FGM2XZhFrVY7
      7YyxFgY4j/N4oeHch2Gex3mcQ5xngPN4QeM8A5zHCxrnGeA8XtA4K5VIx0oVSv7Zr/1+HnND
      0pR0Js9OIarnGs4KAzx5+CTPZKdmG50tFEeHSXX1UCsXcRKpGa8rDA+S7umlVhhDG0liient
      1n5xBDPVPeM4tVIRJ5lq/Hyu40XtcV5/+QUAFIePcsc9D4AQbLjmpdx49WWn+Pb88fTT27ni
      iisXfdxtP/sxjz29nze/69dY1t7qZPWLw2w+MM4NV17U+GzLgz94YYhAJ7Y+Ss1TjB49RGHw
      GAN796BqBU7s2snI8eON645vexxfQfboTsZOjDJ2ZC+jJ05QHDrO0P6d9O/ZxfDRY1RGjtK/
      6xn8QDO8fyfZwSFKoyMMHdgLwOiRQ+HPo4coDZ9kYM8eAq/C4L5d5EfGqIwPMrhvN6VskZGD
      uxgfWFjZlDOB4vAxll/+Mv77r3+Q8T2Psu3wGGjF7meeZmgsD8DA4CBaeezdFyb4jA2dYPsz
      uwmURiufnTu2M5ItNq4t58fYtn0HntIcP7yf737vu2zevJmSqyjlx9iyZUvjeoBjh/bxzO79
      FOqe68L4MNt37CJQrRb7oZNHeGb3fjQwOnCc7218guuvu5a0E+7r48MDuIFiz959mIk2Vi/r
      ASBwq2zftpW9e/e/MBigY+2FjB8KS4WUsgWWrO5iaO9+zI6VqEqJ4uAxirk8nSuXMX7sCMKI
      QVBg6MAJhvfvoVQoseTCSzFM0LUKdjxB3/oV9G9+hLHRKkP795A7foj2leum3LtWLICU6CAs
      cjV+4jD54VF61y+ncGg3I/15hvbvPttLckoIabB21VIKhQp3ffU/6B8vcd/Xv8yR0TI//OED
      3PGlLzFedjny7GN8/f6HKWcHODqQ5etf+SLD+QrfvP2L9Oddfvjtu7j3+xspZ09w5zd/NOU+
      Tz3xBEEQcMd/fpFSAD+69w4e33GAwugB7rznQQpDB/nynfdTzg3yn1+9u/G9PU/+lPse3MLo
      iX385x33AkzJ89jy4A/58ldv49hwHtwxfvjgFgiqfOoTn6RU9RgaGnn+9Ag7PZjEHM1YVhE3
      XQb2HiLV1UVFAAhSvSsBKI9mKB3fQ++VVzHeXyHZnsRu70bgEaZChZ5It1JjdPc+2tasR53s
      J7F0NbpWxbbD5YzFLQb27ERhYieTVE4cYeQYqHqjOpTL0IEDEGsjTp5E59pzsSgz4qffu4fj
      zz5MsmM5v3LTEv7yyztYWVb4lTybtuyEaoXXv+sDdKcc7rj9dj70gffUy3GV+NzW3eRdQbU0
      zlPb90KinV95+61AlUO33ceKNReycsUKrrnmGkBTLefZc+gYQyf2MlSAkYrBu971BiDLwYOP
      svXxR6i4NXbs3MuzB08CbwNg057jfOA970UAx+/4Kl19K1ixYmV93Ag+N77ql/9fe2ce3Gh5
      JvifblmyLcmH5EO+7bbbbvcJDTRX0xzhDATCERgCCZAh2dkkVbOzM3tMatygWwAAHiFJREFU
      bWq3JjvZ2WxltyaEAIEk0EWSJgkBQpg+aKCBQGjctN2+D9mWJVmybNm672//UNu025Ytn7K7
      9avqkvvT+7zfI33f8+k9noNtRi0EE7+yzoHTNO6/m317qgmMdK+PAShFAhpR+ibBmtrEuK9i
      vjeLauFszgRNTR3UJHJqFuUAGM9pGJ/p51zKDPpZbQA01bPblRpm5waKBP2IIh58YTWa/JpZ
      sulAKZo9tLjuli9x25XTY3+BioZmHnv8cUQIBIMhDjm6KchOzI90ShGWcS/l+dkIgpza5h08
      /vijIMQJhiIcGj4953zR2NnP6rdhDer4xjfu561f/QSAsGcCx6SX2NQQIUCn1XJNwxe4bIth
      lv9RjlRgzBNCny3F60kWJimloEA7+7Oq1Th77UDCaW9BA5h2h55+XS67ywxc2zh/kEQ4HOZU
      twWlXEIwHEOvU1Nl1M9qsxqlc1bax2aXX6iPcyu0y9W55MXOLXQh4upLGnnqqZ8glUi44fZ7
      MOg/D+e86Yt38tIvDxKKwQ2338cVO6r48U+eRioWc/Nd95/TVozBkBiDl2iV/PTZZ7nnK4+g
      Dg7x3M9+hiQusEMK995/L79/9RB55cXIgG1X3szLL/6Cz47HyS4s46G7bwXg1jvu4KWDzxOM
      ClzzhUTNNYNh9n2jKzQgnx4VieUYCnVklzSR8+FLPPNsO2GvL7kvkN06zDM/f4m77ridt9//
      mO9884klfNVzv+D5ooR8Ph/BYJCv//AIVXo1JoePrcZcguEY+xqLue3KrTPp8TIGsLYGsFpR
      XCvlkw+OE5WqsfV+hnbrdRzYU7e40ApI+o3GolEqyoz4fH7uv+++NTn5f3n27TnHguEYJocP
      sHHwnT6+ev0WSgo11JUVUqBbvBBdhs3Nrksvp6Ojk93776TSaFhcYIUkXQUqKa9m3DqI1Wql
      p980671YJIjHlxiPWYYHCYSjxKNhBgaHETgbERQL4/Ulz0KQKifaLPzzrz7h3ZY+Pm4zpVyt
      JMPmRCrPYvvO3ety88MiG2EKufxsRM/sUDmrzYw/IEMjDyHWltLd2YGEODU1FXT2DCITIkRD
      PqoaV2+z40SbBZOjh+f/9kaUSiVKpXLdqrFkuHBZ0AD2H7gRdyBCbv7smNSy8gp6e6w4/VGa
      qrIZt0hAJEaVrSMesTI5NY40W49SKpoJrzw3LccPDx7H5lpe/YD/8eKHmBw+XvyHW1GpVCnL
      TUe6LZfNLr9QH8mCSlpPt7J9x/Zln29suIdITjkluvUJfT3d2sqO7UvTd0EDyCvUow6HOXz8
      Qxrrpteq4wz09mI2j9NUX0FL6xnkUjkqSYQzZ1rJ0RWjkMpRymKMjnsoys9BIpHMmnzZXEFM
      Dh9V+uWV1QToGXYgk8nZUZ9aHG26J6Hpll+oj2Tx3m2tbSszAHMvgRL9uhlAa1vb6hpAJBRk
      yGxj374rzjkqprquieqzk3ODcT7JwiUpsRxeOtoJwI9SNIAMqRFyO/jJcy+iytEwOp7ICv3q
      y88zOhXBH4zw+De/yeGDzzKBjJjfS2nDZdyxfwfPPfMcgkRGblE1D9x500x/h1/7NX+RhlEb
      arj76i389r1+Hrn3C3z81itkN99IU6mG4GgH//XHv6ehvACbfRxjSRFms4Vv/8M/MnzqOO+f
      6iYSCnL3w08w/NHv+Is5hjw0hjeaRaFWyURQxH/4d4/hGOzm+ed/ht3u4K++8W2UPjMv/+Eo
      MnGcXVffTkOOi1dO9BOYcnDXPV/i0Mu/WtgA3nrzDeoam/nwkxaa6udu828EnnvtY3RqGfdc
      vzvdqlwQHD/yNg/+9bfRq2UcfPEgMc8Ibnk5Tz55A56RNo68fxpkOXz14YdQAgcPvkhfixtF
      8VaaynW8few9wtzEdCTwTV+8nz1VWl76+S9QGm4l6nqbqACddh+P3qyZOe/l+2/my9fv4eCL
      B3no4Yf49NgrWF1BPjx5msuuuJp4aIK3j31ArRrueuBRqrSTHHzxAx56+DZePHgQAH1lPQ8/
      9BBRn4VfvflnxJ4BLrviCqQigY8+eoeGG3cwERTxd//+b4h57QRDkYV9gbJVSkYsVrKzV2f5
      MRAIrHoF8Nc/MnGizbKqfV7MhKMxlPLZz8XzimbNkUlk+k7MIw5cf2Dem2o62P66S2o4fPxd
      sgtTe6BOB/OLFXlcd9WuRVoniIZDiGUyIjPzHREHDhwAoKmpKZGJI9vAf/qHv0v+C2Dq7uSu
      rz6JgihdPQMpnXgxDh5p5fWPTCsa+yfjudc+prEin307ale974uJa665nKd++C/o9YVYxrxI
      cozkhA/z9NM/xReM8MQ3v8nh38x23tuy52qO/PhpTo7lgDSHHXsSq38iqZL3/vhrPhZFMG7Z
      hRSo3nUtz333O3z3+/83JX2u2NPMB3/+CIVMyo7LFnYt942N8Owzz+D2Bvjak98iZNNx8NW3
      yc3Ooqi6keLazxdNPI4hDv7ureQ7wb987qfc/cgTqCUxfvLsL/jWXz+eksLzMb3T+NxrH88Y
      wLmT4Om/l/p6vuwltfkUF+TOawjpnoSmW36hPtZzJzga9PDSoT/y6MMPrMv5FiPpN3rXXbfx
      m1++gCAI3HDr6iRtWmvG3UFO9o1jc7rpGBrn6uZSjHrd59UGM6SdP/z+t9xy+73pVmOGpAaQ
      W2Dk6489tionaekeodfqxuZ0r0p/izFtCGcGHJgcPnZXa3F5I+xrLMYdjLG7Vo9EIqHW+Hky
      2ulsdRnWlnu+8mi6VZjFmifGisVivPdpF71WNzq1DJcvMusVmHPs/NcJb5i8bPmyZJP1cb5s
      sU5Jlkwy45V6/mtDed6KhiDJcvovhlqtnvkeV7rznayPUChEQUHyEM8LmXXJDLfSMeZaXvyL
      RX6hPjaSN+h6sykGxqvh87PSPja7/Gr1kW6iYT+nT32GJxDGPjp/NuuAx8WUL+E0OTLYx2et
      7UTPiye22xMRYpLvfe9731tTjUkEvaxHHbAMy2MzXZ9DL72AXJNP1O/mf//w/yDXGhju+Auf
      9dvJl4c5efoMJ479iTeOn2Lvvst443e/RpuTxetH/0yRWuCVNw6Tn5vF//zB/8JQ2bB+BmA1
      D2IeHiE7X49cklq26cG+biwjZmRqDT0d7UxM+SgsWLxSyrnYzP3YnD6CnnHM5mEkWVpUilTH
      8gLdHWeY8keQx4N09Q8SCMfR5qaW6kSIBmht68Ix7kItjS9ZftjUi3PKT64CWjv68PiDxPyT
      DJrNxCVZZCdJ2zKN026lf9iKoUBDd2cP5hEbmhwZ7V39+AJh8rSJDc7NZACG/FyOHjlGTkk9
      uUopd91+EzbbKK2fnqJAI8IW13N5VQ5FzfupNWTT3tnFrbffSU/7Zxj0esRBJ7Z4MQXZYi6r
      yV2/IZAvGKV5WwWD/baUZSpr61FIBMbNveRVbiMeXVpuoXjEx2QwSiTgZ9Lrp6m5GZs59U29
      kMuMbSpOJBxmyOageVsT3ilnyvJCNEwwEiMQDC5LvryqjnjEz9DACFuatxH2e3BMemlqasZp
      My8qX2AoQSkDRDLqt25BiATpNdnY1ryNgHf+gh0bnZ6eHuRZKqYmJxBHJjn2wZ957+33mHQH
      EID6+no0BXqOvvprvFHwu2z89OmnyMov43TLXxgasSMIcSZHh+h2hNczK4RALBRCsoQnTUdr
      C4bKerKCdkZD4fl24RdkoLcfQSLB6pikWK9BiEVAlHo5T7FEhqG4FInHRkAsIpYomZsyAY8L
      XVEFEecQcViy/DQKmYhQJIbA2Vq9QoykBXvnJU7LJyep37EHu6mb8HIVWWWWs7l35fW3ceX1
      M/8D4Por953Xqpn/9p+bAXjib/7jOcf3n9NRIuh/3QygqEBHz7Cb+oa5mRWSIhLjtI1QWlGN
      MNxHrm5pXqa1jduBGAU6FwppnI6ufurqty4qN40stxiVs5dItobtpQV0d7RTZKxMWV6VX4rQ
      3YcsR0tNmX7J8oP93fh8AYrr6xnp7yZfX4JGAe0dXVTW1S8qb7ea8fkCjI05EMtUjAyaqK6t
      o6+ng8Kied1415VAILBqq08elxNXIEZ5iYFRyzDZeUWolVLcbi8qhZiBIQuIZdTVVc8a9myK
      ZdAMa0u6rs/qnVfAbncQnbQRkOYgUuXhsQ9TrM/HMeGleVsDAK2trWw/L15gUyyDZsiwMCLE
      8TDOiBJZIIi+SIdMKsFQYkQpSyz9BqZGUWrmxhlnDCDDBUCMU6faUMpEaEsK6GxpJSyIsZrN
      mEfMTEx56Ru0U1sx1wAyQ6AMabs+LpdrxR6uK+WCzw0anhjiX559hfz8Qh599GGU0uSrJ4eP
      HOWmG2+gpaWF3bvnjzCzDnSArnrBONeWlk/ZvXvPPO94OXK4jRtvumKe9zYmB59/irC6iLjf
      y2Nf++qq9i2VStP+YLzgDSAe9lF/yX6uKPLz7gcn8Hol+CcHqdbKOTniYv/le/nwnaNUbbuU
      1//wKuq8Ega72hnpbWXQOsa+W2/jzRcOEVIq+e/f+3tspg46Ol24LH0os9R84+Ev88LTP2Lc
      6UJRWI5SrUUl8uMa6KTfFyZLXUwWARqLFXT7ZBz7w2EK8iUcOfY+heU1yD1DeKV6HvvaAxvz
      YggwZu6jpLIp3ZqsCRfNHMBmHSVXk0s0GiEQSGyoffnhJxizDNHQUMVkUMqll+5l3+7EMum4
      L84jD9xOf/8QjZdcxa4aI+dW2r3jvkfIEicSf2kKjNxzyzXsu+keVKLpRK1K7nvk64hDTmLR
      KAG/n/K6Bi699Eo0uNFV1KPX5dDQuI1J2zD+1Mr4rjtFRUWUlRqJecdo6118822zccEbgDS7
      kIn+TxmTGrl8RxNSnxm9sZqyuiY0chF11eWM+8U015WxY4uRP5/qorl5OzddexmvHjvN7Tdc
      S2NjFY3bm5ECxVWNbK8rQ6uE7c2JzZatjY1oi6so1ippbt5Oc/N2qhobUULi72INpikRxVo9
      xbowsYJGCnAhVWYTi0Yor99Gdur7c+tK19AoD9x/L8FIjA+O/ynd6qw6mUlwhgWvj6nzFO/9
      pY2911wHQT9bty6+Abca510vLvhfgAwr4/g77+IYs/LWv72zqjf/RmFd5l1yuXzxRhnSxkLX
      R2Mop1gcZmAilrTNZmZdhkAZNi92u5142EdcoaNUr1vVvjfCEGhDrrxl2Di8+ofXIB5BkMh5
      8onlp8bZqGQMIMOC7GmsQlZQSdSfrA7X5iZjABmS8tlH73KmbwShZxBVQSV7LsD0qxkDyJCU
      +u17qKjfTtA3yaE3jqdbnTVh3Q0gFAptmvjTi4Vk18Q2bGJgxI5YIuPhv3owDZqtPeu+CrQR
      Zv7TWE09qAzVaBUR2rotNDcmSawbcWMeh7Ki+bNk+yftxFQGcDuQ6PSoNln2kXQGxBztmsAy
      8XnG8NI8NV+6dN6KzmvCRT0E8oVjeMxD+GRRvKEQ1mETrik3pTVV9LX2gzRGlkxMaVUZ/b1D
      TE7kUJynxj4+RWFRGf0mE41bG4hOOghLDTDuQCSW0GNxYDQaCXmcjE0F2FpZRPfQKDKFArU0
      zpTbT01jMyrZxt+HfPn5p4lIFGQbqrn75mvnNhDiDJlMFJaUo5DEGLY6qawwIgLi0TCDI6NU
      VZbjsI6gM5QSCfpnst0BWCZ89Ns9c7o93jk7509lgZqqwtSyaSzG0XYbx9oTeYEuagMAKSJR
      DH9MTI5chMVmJVerxWm3o9EVIYi8VObLsPqilJRVEQ04GBmxkpWjYXzCSX5pNRq1ggmnCEEQ
      QBAhUygQCzFC4RAejwe3c4pehYRt2xrp7+3GZrWj1eZgd3qoKtYsrmKamfD62LN3J/925DAN
      NeXnlMpK0N/VQWFVPd1dHUhEAjVVpXT3j9BQY6S9vSNROLHzDGJJDi53F2JpFltqF0+Pf7zL
      Mev/1zXoqSrM5v2+8VnHy/OyKM9LvVbc+VzUBpClykItFzERFqOWSsjLycbtD1NYmI/HJSCQ
      hUgmRYkcp9WCOkeF0VjK2KSHgoICYpJETIC2pJq2jjYEkYRGMTgVMqKRKLFYjCy1mrLCPNo7
      OgmGQhSXlOAPRynULv+irReTk5NcdeU+pnxhbrnlDvK0cw1Wq82mt7MDiVyJhAjq3EKi5jOA
      EZFUmiicGDMjhF34IwJikYeu3jhbairPFtaYPQIXBCFpIb9oNMoHfROzj1drKcldmqfBuUUB
      190A/CtcTxYEAZFoKSlBkstqzl5QvQog8fOaowME0GgB5AQBtRzqt1TOyBvV03OBIB5Potpl
      dXXiyRiKCpSWlACQp0nMKcKhIKXFRTjHxtEVGNABQvRz2eXqv1SSyYdCoXnnABMTE8ikcuRy
      EdkaLUWFc5OSef0hVEoF/lAEtQLa206hKazCbDaTJRXNFE7Uq8EREDFpTeRlEovFSCSSOfqI
      RKKkhfyWchzAG47hC8924TBky2clKV53A1CpVDNfdiwWIxgMLik1+UoKRaStSMXZz5ubk7Op
      imxUV1dz8IWnkap0FMZlc4Y/ABU1yRzktHPbaqGieP2yUJsmgpyxz37gfmXH7NQ6y5qFxaNh
      3N5Ex6OWYbyBMEIswoBpiLgAAe8kllEnEMPvDxHweonOs9gUDAZ58J9e5+CR1uWokWGN6Tj9
      KWb7JBUVFfM+/TcShwfcs/71u0IpyS3rcWK12vAGg5ArxyfWMtrdiUwMVTVVdHT3Ewm6MWTL
      sHskuK0+fAEXO3c2L+dUGdJIXqGerVu3YhnoYswTnfcXYLOzLAMwllfQ29uNy+lH31RFcNyC
      IBKhUudC1IxMJqPYkEeHy8tI+2c0XLUfQRCIx+PEYjHC4TDBYJBgMDEGTjbxmY+VVExPd7X2
      jSqfrFJ8UUkZw4O/QabORzzUBVy17HNvVJZlAIP93ZjNI+xs3kpnSysyuRSdQkR7exsqTSFe
      5wgtnWa27NyKvOkS3JYewnm7UUglSCQSIpEID//zmzOF7kbHPfz8zU+5fncVVUb9gufelHOA
      DS6/UOWavZdeSl3jDoKB8LLPu5FZ8NucrihyfmWRypp6Ks9OfvYWlswVLCua+TOnPhcoXlCJ
      6ZpezVV6qtKfsjLDOZw5+RETAYGK8nJKWFpu1s1AUtO3W4f5/g9+QFtbK//6zPPrqVOGDcT1
      N9+CVCwQDm7QtBUrJKkBxKJRKsqM+Hx+7r/vvvXUKcMG4o0/HSaGhJOfnEi3KmtCUgMoKa9m
      3DqI1Wqlp9+0Lsq0dI/w3GsfYxpxLN44w7rQtKWa/s5WqhsuwGAAFtkHUMjlRCIRotH1CYju
      Hpnk9Y9MOFy+xRtnWBfso3bytBo8Xm+6VVkTFjSA/Qdu3BSbIBnWho7Tn2IanaSquhbLcH+6
      1VkTFjSAvEI9xUWFfPD+h+ulDwAjDhcft5kIhy/MpbfNQl6hnnvuvhOlUslNN9yQbnXWhAUN
      IBIKMjRsYd++JNmMhQhnTrcxZBnFPzVOe3s73mCUUcswHT39CIQZd3oYGx2d1xUiGSfaLHz/
      5Y+JRC7MlYfNQlFJGW++9nucTidTnuRDILs1kYM/FgliGhqZqT4Wj4YZGBxGAOzWEcIxAZ9v
      Yw1vFzSAt958g3gszIeftMz7fmRqFLs3Sp5OS/+wjabGBgb7ehhzTVGRC6axSRxWG/ZJH9IV
      eDFmSB9SkcDY2BiT7vkNwDFiIq7QoFbKaO/oQq9T0N0/AkB7ewdFBTl0dp7B5Y0x0NuFxTa2
      nuovyoIbYdkqJSMWK9nZRfO+L9OWcWCfkVOnTiFXKEAkAQTEIjEKhYywP4rVbKaiuWmWK0Sq
      UZj/+kpi6PW3D103cyzjCrF+rhAAIpmCqqoqcvPz533f7pxAqY4wMhxEJZeueTzAUo7P97mi
      0Whq8QCm7k7u+uqTKIjS1TN/bV2/28Ww1UFWtob8bBnt7W3oSyrxjJk5MzRJ0/Y6suM7iYbG
      CccMM64QC229n4vNlfAVOnf7PuMKsb6uELfd8gV6LeMok2yElZcYGLC7kUqkyMXxDRMPIBaL
      5/1cUqk0tXiAEyfe4+7qekQSeOe9EzTOkxhVlaujIffzdHn6s14R+rzGmWPGsixg/qdHqnz3
      R69TrFPy94/cuKJ+MiydN/50mNrtezn5yQl2Ns8tcavRG9k1r/tW+uMBUiGpAdx112385pcv
      IAgCN9x653rqNAeTIzFxmp5Apbuu1MVE05ZqOjpb2brz/GLUFwZJ76TcAiNff+yx9dRlUR78
      p9e54/IqHv/iZelW5aLg2B9/i9MvUFxUjHSB2mqbmY2fl+M8bE53xl1indh5yeXoctWoVCqy
      LtBkZmsyljjd8gnRSIwtOxsZHfQRDIyydcdOpCIRf/ygA7F4+Zmjpl2ndWoZDpePXfWlmfoD
      a4Tf58bnDyASSVAoU4vZ3mysiQFIFFlsr8ujwz7FSPsptl59YGYf4MOO0ZRXgRbiRJsFk6OH
      f3zwEmKCJGMIa4DNakOhzEIEBPwbawNrtVgTA4hGo4w6XBTqS5A37WZsuJeywl2sxSjypaOd
      mBw+Htpfi0Qi5ubL65eUZSJDcvZedWBN+49Go2zVKzGoP78z8tQK3G43l5TOvn75ijhut5vt
      htnVBHWyKG63G710ttuMNBIjKx6nQjXbkdPtdlOoFNhbnohGXBMDqK+pZMIbpTgnl+wyFeVo
      CUcFFGs4kfqwwwbAL4/1cEltPsUFudQbteyuNyKTyTK/DhsQqVTK9buq5xwXBIEv7p2bh1UQ
      BG7ZNf/xnblz7y1BEKg9b59BEAR25Oayo+asDsvUfUGysrWUnk3jqFJJAAWCIBCLxTBoEomJ
      4vE4Bo180VdgyW2lojitfaOMjU9y6J0uGo25BCIxdtUUEo2LUMoTc5Ba4+f7E6n8apwfGrpU
      Nqp8ssRY6WJ6c2zKNY4yW4tCJpl1fCXt52y8bbbs0Cu5CTbqDZhu+XRmh17ovPFoGJNpENuo
      neKKamrKSxfsb6ntYRMug65kAr3SyffFLr/eTLnGCYQibNu5h3yFmEByl6VltbcMD2w+A1hJ
      bsyVyGbk15+4IOD3++nr7kRdWEzWAnere2KMMZcHuVyGw2ZZtD3E8QXj6TGA4YFe+gfNKbcP
      +dx0dXVjtjqYGnfQ3t5BMLqIeZ9/zr4OPGGwmgfp6p3fuW+h83d2dTHlDSxdXojT191J/+AI
      sbCfjvZ2xiZTCy+MR8O0d3YDMDZqob2jh5gAg/09DAxbliQ/ahmis6MDXyiWsny6GXe50eWq
      0amyCC0yUM/NK8RQoEMQBFIb1As4bSNpMIDwJFMRJfim8Kd4D4tkShrq6xiz2xi22WlsqKGv
      py/1U3pd2CwjeMNxxqd8GBQRLFOpB9v09Pcjk8pQZcmXLB/zO/GLNXinnPT09LOlsQn7yGBq
      eoejTA/ZR8dc1Ffk0t3egU+kIeJ2sZgG58rnFRZTZsjGPNCdsnw6iUVC5ORqyM7NYSocW+Rp
      niBHm0dNTQ0KYizuNC5CKpelwQBiEcRSBTKxiFQf4hIifHKyhfqtjYhFIkQSGQip+8V/8ukp
      xKI4Y2N2xCIJcoWEUDj1QP9QKEJFRSnt7e1Llo/GIBaYIhqFiEiERASpbogoVapEe0AsFiFR
      KIj4vUhkCiSIWEyDc+XHR0cYnohTW5Kbsnw6Cfum6OruwTQ8SpFh4WyB03inXJhMJjzhGIuv
      uIsxlpakwQCyChD5rUwKUnJTXIS1DA2jysnBOT6OLkdFe1sbJeU1KZ/yymsPUL9lC6VFxcgl
      MXpHg1QUKFOWrzAW09s7QIG+ZMnyEpkCETHEUilVJXrazrSTo03tgnomnTid4wxZRlErpbSd
      GaJu1x5iE4MEJTIW0+BceduoHUk8hE+Sl7J8OsnS6rlu/7XUVxo409ZOdJFhTdjvxjRswe/3
      ExVEM4afnBiT3tDmWwbNsPpsxGVQ/4SNo++fRJtfiKEgn+q6OlItqTY2NIDSWE3OIivGlqGB
      jAFk2JgGsNbEYgF6e6ybbxk0Q4bVYGJsDI/HlTGADBcnhUWliEjTPkA6OPr6IX7+0q9weRcu
      TDfQcRpvFE63tCywlBalpeX0gv1YBzqwuuY/1+nWTEmo9CMiHotePGVS7ZNh7r3jBg4e+h0N
      1aVsq8xjMJjF6aPHaLh8L72fnSRLX4Wz7RjRsgHqi3KoGTPz81+/Su22y4hPmrBYR7ni1gfZ
      VqlhwjnJ80/9kKmwmm9950kGT73Lu6f6iYQiRCVKbr60EqUqj//3o1cQZWvZ31RO6Z5raHn3
      TY69+SYDX7iXnIiDbqufO27YzeuHP+S6m++gsWqeegsZ1gAxxtJi/j+dR2bU/5WWDgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1.1 2016-2017' width='192'>
      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
      yf8HYsUY2n1PFhIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1.2.1 %' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAV+0lEQVR4nO3deXgb9Z3H8ffosCTLl3zHjq84cZzEOQhJSCAFwlXKA7S0FFpKL3rBU3o8
      uy3t7rPd5Vme7T7s82y3+1C63e1daNPtlqdQoBQaSmm4cjtxHMdHfF+SLx3WYUkzs38ECiZE
      Ti157GS+r79iRzP6juSPfjOj+c5P0XVdRwgTUhRFsSx2EUIsJgmAMDUJgDA1CcCi03j04X/l
      vvvu41v/87+okWEefOjnKZc49sfd/P5w/+s/Rbn/C/fwla9+hW/8y7eZCCdmPTYa6uGh7z62
      QLWf/2yLXYBQ6eob58N3fZ61K5Zz+IVf8tIfn8aeZeeajfns/s0eHCWr+MLtO/nB7qfA5mCm
      /zhd4Zexfu5LXLulEndpA3/3D1+i/U+/5qkXm1mpnOK3zx+gZM2lbPb4+OOevVhys7ikPMov
      nt1P9bqdfPmT71vsDV8SZARYdHbuvudTvPLMr3jwuz/nop1Xs23ne/ibz91GgaeMK3Zdgxoc
      JBSJE1Py+NIXv8DNN1zO7Z/9CtduWfXmahQLy6qrCU/5KSqvYdc1VzHS08WOa65j5xU38/k7
      rueZvc3cdtsHGW0/QmzxNnhJkQAsuhCv7e9k++VXE50YJGnNIuLtpbW9l2d+9xR2l4tE/PRu
      TVVtPU6bBacrm5PHDjE8HgQgHgnQfHA/j+x+mosvbuDJp/bgznEST6pYLE4mR7s42TtMcY6d
      4TE/W7ZuQ1nMTV5CFPkeYLFpHNu3l7ZeL5t2XElDVQknDu5lMOxiQ62bfccHKS/1sHZVLQPj
      UdatqiYZC/H8H/ZQtf5S1tYW8udnnmE4EGPt5u2sX1VF74mDtA5NU1hQwI6tG2l+9QUmlWK2
      N5bx3PMvkl/ZyK4dG00fAkVRlEULQCQSITs7ezGeWghgkb8Ii8VkL/Tc6EyNexkc9qJqOrqa
      ZGRogFBkBoDETIRQ5PRrqesaY6NDeMf9yLB+buQYYIkLTYzi80fRo2McOdlP29EDhJMKxw4d
      wB+KcOzwIU72jgDQe/IYk1ENNR6TAJwjCcASl1u0jIb6KuLRGG63C39Mo75mOVUlbkJx2Lh+
      DVlWBUjSO+gjFhhjIhBGjuzOjQRgidPVOIdefRk1dzmN1SWgnD501YHZR7E6itXBuvWbyE74
      GJyUXcxzIQFY4ka6jhPPLiXPAaFIjEKXlY6ePobGo3jcdrxj40xNTeAPJagoyuZU/yBT00ly
      XfId57lYtLNAk5OTFBYWLsZTn1dmIiF8E34AcguKyHdn4fP6cBcU47ApjI6OAuDO8+DJdTHu
      82J3F1CQK2fY5rIop0F1XUdVVfx+PxaLDEBi8RQVFSmGj5OKomCz2bBYLDICiEWX9kfwTCTE
      8WNHaO3oRtV0ghMjHD58hKlQjEQsxNEjzQSjCZLxML7xQCZqFiJj0h4BgsEgdQ1NTPQco3vI
      zUhvL9u3beS1A82U52SxfOUKOrtOkafEKFu1PhM1C5ExaY8AJeUVEJuixxeh2K3gyi8gy5GN
      w6Kh2C2EgiESET+ToSithw/gC8jpObF0pB0A/2gfh9oGuOTSy8h1ZaGpGug6GrCicR3KzAwO
      Zy4Wh52tF69hpG8wA2ULkRlpB6CttRWrVef40WamNQeuZIDX9r2Ky7MMq9WOU0lSVFFNaY6D
      /Qdb8JSVZqJuITJCvgcQpiW3RRGmJwEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKaW
      dgB0XWN8bBzt9A+MDQ/Q3TeEqutEQ5P0DfkAiIYCzKjSqS2WljQDoNHdfoLDzSdQgcnhLvqn
      EriVCM0nOmlt60b1DzA4FaWt4xQ2GW/EEpNmP4CF+sYmwuHDADhcbmYGR/AlINdTRjAaIcdl
      pbevGwU43naKDWvq0TQNTdNIJpPpb4EQachoS2R4OkhuQTEl2SojoTgrq4vpG53EZbeQUOzk
      xf1MJsFjVVAURXqCxaJLLwC6ysjQEF6fD3f/IC5VIxwO4VBVVNVNfkkFtmEvNQ2raTt6GF8S
      yqwKFou5A6BpOj/9ffO8l//AFWvJczsyWJF5pTkCKGS7c7ho6xYUi5WCgkryioLENViZnwdA
      fWMTTqeDDRs2ENcsZJvzb34WXdd5/KX2eS//7m0rJQAZkl4AFAv5ntnX9Ofk5c/62ek8/UY5
      XG7kLRNLjXweC1OTAAhTkwAIU5M7qF4AkqrGmD887+XLC3NQFHNOmCQBuACM+cPc/e9Pz3v5
      xx64DZvVnAGQXSBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWppBkBnyjvAiy/tJwno
      ukp7yxEOHDiIzx+mt+M4r+0/zIym09fVTjQpPcFiaUnzm2Ad3Z5DgcuGDgS8fajuZWxpKgM9
      zuFuWLs8m1N9I6gJO9XWjNRsuMGxII8+d2xeyzqzbHz5g9szXJHIlLR7ggsLPQz29AAwNTbC
      SNBBcKQDZ3E1dm2alq4Z7DlxElE/L744wo4rLsWqqmiaRiKRyMAmLDx/KMKrrfOb2cbttJ+x
      naqW3kiYVJOz1plub3UymUTXzHkpREavBcorKKI8p4i1VW5ePniSyy65hIC3j/F4FtMBK4V6
      jGBCoSTr9DSpdrs9k0+/YKzW+Q9diqKcsZ0WVUurHpvVNmudNlt6b6PNZsNmNefhYHqvnJbg
      ZGsr3olxEkdbWLdmDVprM/u9SVY2NAE63kCchoZqOoNevEknF58ff/Om9/Fv/oZQJD6vZb/5
      matprCnOcEULI70AWOw0rt9E41tmP11/0ZZZD1m9ugGAhqaL0noqYaykqs97V03n/DnZYc5x
      T4jXSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKldkLdGDMfi
      876S0WG34sl1ZbgisVRdkAF4/lAPP3z6yLyWvWhVOfd/8srMFiSWrLR7gn2D3Tz/wiu80ZOk
      JqLsefpxJqI6Xa3NvPLqfiJJja62VukJFktO2scArvxSivOcp68A13W629vIycslkYwTmLHR
      VJPHqd4hIloWenJ+uyVCLJS0J8nLzc3hjW7SSMDLtKWAktwIKHZcligtp2I4cuIkYtMcPTDO
      psu2Y9cWtidYVdV5L6vr+pk9vJle33nREzz/GpNJ9bzp987oMcC4z0s0GGd4sJd8SyU7N21l
      YvAUISWXqQkfHj1GJKlQtMA9wZnu4TVnT/D8m+RtNut50+99Tq/ciHeM8tLiM2cReb0neDIQ
      4NjRFprWbaS6AXwDHpyldei6hn/GwooVJejTPqaSedRkLcRmCDE/cwZgOhzh+48+xu3vvZ6G
      +prZIXijJ/hty5RWrXzjAdTX1wFQt7opQyULkTkpA/DCS/t5ef8RJqcCHDvRTm11BY4s+QgX
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.2.2 %' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAWPElEQVR4nO3deXgcd33H8ffM7mpPHavbknVZtizb8hHHdmzH5CAhDXmSlNCQgDlaUo7k
      IUCfNgToU1qe8vTg6fNQ+pBQrpYrYEq5Ak4DwU4IIYflS7Ysyzqs+1xdq13toT1m+ofDISte
      Be1qJHm+r7+88szsd2b3szOzO9/5Kbqu6whhQoqiKOpyFyHEcpIACFOTAAhTkwAsO40nHv8X
      Hn30UT73lf8hGR7is1/4Tso5zj57iJ+f6nv1UYRPf/ghHvnYI3zqnz7PRCg+Z9pIsJsvfPGH
      S1T76mdd7gJEks7ecd7xwIfYvG4tp577Hr959ilsWTZu3Z7LoR8fwV60gQ/ff4CvHToMVjuz
      fefoDL2I5YMf5U27ynEX1/HJv/sobb/6AYefb2K9cpGfHj1O0ab97PT6ePbIC6jZWVxXGuG7
      v2ikcssB/uq9b1nuFV8RZA+w7Gw8+NBf8tLT3+ezX/wO1xy4hT0H3sxff/A+8rwl3HjzrSQD
      AwTDMaJKDh/9yIe5+44buP8Dj/CmXRt+vxhFZU1lJaEpPwWlVdx86xsZ7u5k3623ceDGu/nQ
      wdt5+oUm7rvvbYy0nSa6fCu8okgAll2QVxo72HvDLUQmBkhYsgiP9tDS1sPT/3cYm9NJPHbp
      sKaiuhaHVcXhdHHh7EmGxgMAxMLTNJ1o5NuHnuLaa+v42eEjuD0OYokkqupgcqSTCz1DFHps
      DI352bV7D8pyrvIKosjvAMtN4+yxF2jtGWXHvpuoqyji/IkXGAg52Vbt5ti5AUqLvWzeUE3/
      eIQtGypJRIMc/eURKrbuZ3N1Pr9++mmGpqNs3rmXrRsq6Dl/gpbBGfLz8ti3eztNLz/HpFLI
      3voSnjn6PLnl9dy8b7vpQ6AoirJsAQiHw7hcruV4aiGASwFYtpPgaDQqAXhddKbGfYRisKa0
      GFVPMjIyjMdbTLbLTnw2TDSpku3MYnR4iEgsgaJaKC0rx26VI9yFyBZa4YITI/j8EfTIGKcv
      9NF65jihhMLZk8fxB8OcPXWSCz3DANidTtxuF52tLcR1sx/gvD4SgBUuu2ANdbUVxCJR3G4n
      /qhGbdVaKorcBGOwfesmsiwKKCp53gKy7ZBdUo3HJgF4PSQAK5yejHHy5RdJZq+lvrIIlEtv
      bB2Yfxar09HWyfqN6w2ucvWSAKxww53niLmKybFDMBwl32mhvbuXwfEIXreN0bFxpqYm8AfD
      xEKTzCg55Dvl983Xa9m+BZqcnCQ/P385nnpVmQ0H8U34AcjOKyDXnYVv1Ic7rxC7VWFkZAQA
      d46XHKeVuG7FaZcAvB7L8jWoruskk0n8fj+qKjsgsXwKCgqM/xpUURSsViuqqsoeQCy7tD+C
      Z8NBzp09TUt7F0lNJzAxzKlTp5kKRolHg5w53UQgEicRC+Ebn85EzUJkTNp7gEAgQE1dAxPd
      Z+kadDPc08PePdt55XgTpZ4s1q5fR0fnRXKUKCUbtmaiZiEyJu09QFFpGUSn6PaFKXQrOHPz
      yLK7sKsaik0lGAgSD/uZDEZoOXUc37RchyhWjrQD4B/p5WRrP9ftv55sZxZaUgNdRwPW1W9B
      mZ3F7shGtdvYfe0mhnsHMlC2EJmRdgBaW1qwWHTOnWliRrPjTEzzyrGXcXrXYLHYcCgJCsoq
      KfbYaTzRjLekOBN1C5ER8juAMC25LYowPQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNblwfBlo
      ms5jP2pc9PzvuX07eR5HBisyLwnAMtB1naOnuhc9/703bZYAZEjah0C6rjE+No526QFjQ/10
      9Q6S1HUiwUl6B30ARILTzCblHlxiZUkzABpdbec51XSeJDA51EnfVBy3EqbpfActrV0k/f0M
      TEVobb+I3KZGrDRpHgKp1NY3EAqdAsDudDM7MIwvDtneEgKRMB6nhZ7eLhTgXOtFtm2qRdM0
      NE0jkUikvwarkKaltyfUtOScbRdPaHSPLL7ZqG6tN616VrOMngOEZgJk5xVS5EoyHIyxvrKQ
      3pFJnDaVuGIjJ+ZnMgFei4KiKKbtCdZJLwCKos7ZdpPBMJ/8ytFFL+8H//g2LKo57yOUXgD0
      JMODg4z6fLj7BnAmNUKhIPZkkmTSTW5RGdahUarqNtJ65hS+BJRYFFTV5AHQtbTmv3zbqWm+
      ec38WqS5B1BwuT1cs3sXimohL6+cnIIAMQ3W5+YAUFvfgMNhZ9u2bcQ0FZc5t7NYodILgKKS
      6517Tb8nJ3fOY4fDDlw6P7Cn9WRCZJ58HgtTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAI
      U5MACFOTAAhTkwAIU5MACFOTAAhTSzMAOlOj/Tz/m0YSgK4naWs+zfHjJ/D5Q/S0n+OVxlPM
      ajq9nW1EEtITLFaWNPsBdHSbhzynFR2YHu0l6V7DroYS0GOc6oLNa11c7B0mGbdRaclIzUJk
      TNo9wfn5Xga6L93iY2psmOGAncBwO47CSmzaDM2ds9g8MeIRP88/P8y+G/djSSbRNI14PJ6B
      VVh9kmn2BCeSiTnbLt3e6kQiga5JS2TacvIKKPUUsLnCzYsnLnD9ddcxPdrLeCyLmWkL+XqU
      QFyhKOvSMKk2my2TT79kBscDHDpyblHzOrKsPPzWPXP+pibTa4m0Wqxztp3Vmt7LaLVasVrM
      eTqY3pbT4lxoaWF0Ypz4mWa2bNqE1tJE42iC9XUNgM7odIy6uko6AqOMJhxcuzre83MEQrO8
      cLZvUfN6nFnzAiBWjvQCoNqo37qD+j8Y/XTrNbvmTLJxYx0AdQ3XpPVUwlhNHSMkFrmnqq8q
      xOPMynBFS0NujShe07997yVmIrFFzfuvH7yFTVVFGa5oaZjzwE+IV0kAhKlJAISpSQCEqUkA
      hKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqaXdE+wb6OLocy/x256kZDzCkad+
      wkREp7OliZdebiSc0OhsbZGeYLHipL0HcOYWU5jjuDTuoa7T1daKJyebeCLG9KyVhqocLvYM
      Etay0BOLu7xWiKWS9iB52dkefttNGp4eZUbNoyg7DIoNpxqh+WIUuydGPDrDmePj7Lh+LzZt
      dfUEJ5PJRc+r6/q89VwdPcGLrzGRSK6a1zajDTHjvlEigRhDAz3kquUc2LGbiYGLBJVspiZ8
      ePUo4YRCwSrrCbZYFn87C0VR5q3n6ugJXnyTvNVqWTWv7evacsOjY5QWF6Iol22UV3uCJ6en
      OXummYYt26msA1+/F0dxDbqu4Z9VWbeuCH3Gx1Qih6rV0SknTGLBAMyEwnz1iR9y/5/eTl1t
      1dwQ/LYn+LJ5iivW/3YCamtrAKjZ2JChkoXInJQBeO43jbzYeJrJqWnOnm+jurIMe5Z8hIur
      R8oAlBYXEgiGuO2m/dxx6xuMqkkIw6QMgKIo/P0jDzIdCBpVjxCGShmA+g2Xjt89bpchxQhh
      tCsHQNeIxeJzvg1WVAtZNrmVkLh6XPndHJ3i6984xIljx6jevAPb7CQzuVv4x48cNLA8IZbW
      lQPgLOCDDz1M3D/Kre96H5XKEJ954gUDSxNi6S14PHP/wbfz9W8+xmxC4a33vtuImoQwTMoA
      9HddYHw6xptuvwMAl8Oc95AXV6+UAZjwDdMz7P/dY2+5lY01a5e8KCGMkjIAO/bezA6jKsmg
      nx/r5Ilfnl3UvNvWlfDoweszXJFYqa4cgMgEP32pHVdyir033IbHsXq+/owlkgTDi+s9CM+u
      jst4RWZc+V1tsXD85z/g4uAAJ5vbcWVZKF6/g/vfLJdEiKvHlQOQlcfffvrT/OxnT7Kp4Rqy
      7E6KS4rnTabrGn5/gDxvHoqu458cIxBJUFa2hkQkwFQoyZrifGZDM6gONzaLnEiLlSNlS6TT
      nU1VroXDzzzHM09+j18ea71sCo2utvM0Hm8iAUSmxxieDGNNhjjZfIGWlnYCw50MTUdpudDO
      5e0EQiy3BQ/sjzVd4O3vf5TSRD+f+fYL3Pem3X/wvyq19Q2EQqcAcOYVU5+r0dvWjNudQzQe
      oyDXQndPF4qi0NrRTUNdDbquo+t6Wq2GqWja4juuXqsuLY0WRp35y0u3JVLTtDnLTKaxvr9b
      XhotkK+5vMvW2ecPE5ldXOumN9tBjmtpLsNfMAB333kb3/ri51DQuevP/jzltHoyTtOJYziL
      a9hcXcbUaD99I1PYrSoJrLgik0wlash7tcNwXodZhqSzXEVR5s2fbpnzl5fem01R5i4zE1sx
      s6/F/G345Z+e5HTHyKKW9t437+Du6+syUdg8Cwageuv1fKphH6+1UuhJxsfGmZyaYnTUhy0y
      hl/PpsSuEJiJkF9SgW90nPJ1G2k7d4appE6pqqCql5alqktzW6J0X8zL60orUMxfTz3ND1tF
      UecsM93tqKpqRl8LVc3sa7uU75UFA+AbHSG/sBiLHmdkaobSovw5/6/rGhs21aPoOjnF1dTZ
      /L87xAGoXF+P2+WgYXM9Uc2Ke/H95UJkXMpYTU+O8fhj/057dz99bSf5/Nd/MHcCxUJRyRrK
      y8spKy3B6XJTXl5OeXk53hw3iqLgfrWXwOnJxZvjXrIVEWIxUu4BzjQ+z+DgCL/4v8M4sqy8
      /Z47japLCEOkDMANt99LXcMuIglQFQW7SzrDxNVlwXOAJ7/zVfTiTXhdNvLX1lFa5DWiLiEM
      sWAASoqKyduxh7oSDzaHHMOLq8uC3y2VrVtPX/MrHDlyhOPN7UbUJIRhFtwDBKen8Pl8xCJB
      ApZCI2oSwjALBuCNd7+Tm3Wd2bEO/uPHp42oSQjDLBiAo08+wemOEZKxCCWb5VJocXVZMAC3
      3H2Q+t4uooqTmspyI2oSwjALBuCZQ1+iNZxLQWKUI4XbefBttxpRlxCGWPBboM4BH3fcdTdv
      ues2Bvp6jahJCMMsuAd4xzsP8t/ffJw4WbznXQ8YUZMQhkm5B/jeVx8j4Krgbx79BB/58zt5
      5uivDCpLCGOkDMDkhI9YXENRFLREjNHxqXnTTI8P8eLLJ0lyqSHm7KlGXjl2nJnZJP0XW2k8
      cYaYBgPdnTJMqlhxUh4C3Xv/vXzx8c+S5XASiszyjr98+LIpNOJ6Fi4raMDkQAe2glp2eBM0
      t7aiarBxTRYX+0eIR6DcKk3BYmVJGYDimm186h82E48nsNpsWOeNlqhSWFTIUF8fAKGZIDnl
      67E74szGBslWYlzoiaM44ySiAX796zH2vWEvanJph0nN+LCmMkzqH7m8+cOk6mm0wWna0g27
      uuBJsMVixWJ5fTfFyi8spn1wCKc3QU5eEQ21a+huO4e7tIqBnh4KiRFJKuRal3aY1EwPayrD
      pP6xy5s/TGo6baWqunTDrl55y4XHefxr3yYS+/2nX2ndtbzr7pt/P82rw6RG4nGazzSzZcsW
      SsOdDE6rbNm4FkXRceeXUeLNwRLJxR/PImf13GBOmEDK8QEeevijJGNhOju7iWs6rtzLLoZ7
      dZjUP7S2po7f3z5XobT00s20isqrKcpc3UJkxJUDoCioisKh//oCHdNQmm0j4N7Aow/8qYHl
      CbG0FjwgCUSSvGHvXqwk+MXJfiNqEsIwC14Kcd+7/oKd1+4iFo5y8K3SFC+uLgsG4Ps//F90
      q4ubD+zkqSPPGlGTEIZJeQh0+Ltf4sjR5+kZnMBGkm0332NUXUIYImUA7jz4IBUbt+OfDqHZ
      stmzZ6dRdQlhiAUPgTpOvshI1Ioy1cGXvvuUETUJYZgFAxAMRykrL6e8fA2h0IwRNQlhmNT3
      Bp32c++7H6D/zAv8psXH+9/5FqPqEsIQKc8BvvyfX+D9H/44B98jjTDi6pQyAMnpIT77z5/B
      br20oyjfso8P3He7IYUJYYSUAbB51/LxD30Mr3tphqcRYrmlPAd44H0PkuNcmstQhVgJrhyA
      WJCOPh9nm04Qjb2+hhBdS9LTfp4z5y4wm9Dw+wZpaetG02F6fJSotESKFebKh0DJCN//5n8T
      DE1wwxvvwOOwkldWy017tl5xlvH+NoLWAtYXJGg614olHqMi30LPWAD/0CjXFJYsxToIsWgp
      +gGK+cTHPsQ3vv0dqqqq8DisuPJSjw2Q7S2m5VQLAatKeW094wN9RGM6Y4O9EI/SeLKZ3Tsb
      0KQlctHLA2mJzKSUJ8FFZdU89L6/4CdPPkUYF3fdk/paoInRAcrWb2OtJ0Zz9zjb6mvoGxwl
      22ElZlXJ16NMxBWKsqQlMh3SEpk5C/4SfOjrX2PD/jdzx54qvvStH6ac1pWdw3B3K83nO3B5
      snF48ojMhKjdUENiZpJuf4xcOacWK8iCHx35uW7aL1zAn+gnJyf1+ADe0nXcWLpuzt927NoF
      wK59cmdpsfIsuAe4570PU19kw1G2jYffLQ0x4uqy4B5AtTrYff1NBpQihPEWPnvSYzzz5JOM
      h2NU1u/iwM6NBpQlhDFSHgIde/4XtHV0MhpWqa+vY3Cgx6CyhDBGygDsPnAL8aAfr8fCxIzO
      nX9yi1F1CWGIlAFoPvYrXjx+hslwAi04wqmWDqPqEsIQKc8BxiamWF+/meGhYfa98S0oiahR
      dQlhiJQBuOlP7mJoeIRdu/aQ7bSi4DGqLiEMkTIA1iwHlVXVBpUihPEW/CFMiKuZBECYmgRA
      mJoEQJiaBECYWkYHLNKSMZpPnyamW6jaUM9UXxvjwRjb91zHYNs5Kuu34pSRIsUKktE9wNRQ
      N7q7mKrqGgqybcwk7Gyt8dLV3UdUsTMbCWfy6YRIW0b3AEH/BBGtkJnJIXqG7eTaYpzrmsbu
      ySY+G6ajeZIte/eSpUlPcDqkJzhzMhoAb1EJk34blZUlDJ/tYeN1O/H1tRPNymd8dJg8fZZo
      UsFlk57gdEhPcOZk9BAop6Qarxqk6XwXWxrq0XWNsO6goqSAIo+NkCMfr/QEixUko3sARbFQ
      U7eFmj/4W3VVJQAVtfVUZPLJhMgA+RpUmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECYmgRAmJoEQJhaRi+HBkhEAxz+yZPsv+ud+C4cxx+KsfW6/Qy0NrGu
      Yedr9gQ/9qNGXjrXv6jnu+eGTbztps3pli1MKrMB0DXazrdRVV2JpsWZVdxsW5/LxYs9KBYH
      /ik/zqL5Q61GYwlC0cW1vMXji29XFCKjAZj29aHnlJEz0w1KFl6XRkuPH7vbTSw2i6+rnez8
      PTj0uT3B6fSLJl+jt1h6gv/I5UlPcGaEIzFCk2P09vWQq5ZzYNs27BfPo+SWMdzfiwuduKbg
      uawnOJ1+Uctr9BZLT/AfuTwT9wRnNABrqutYUw3+6jJseeXougZOL2sKclEjHvzxLPKkJ1is
      IBk/CQbIKy5/9V8q5WVrACitqKV0KZ5MiDTI16DC1CQAwtQkAMLUluQcQIilFgjNEgzPLmpe
      p91Gfo4TkACIVerwy+38z7Mti5r3DdsqeeTt+wE5BBImJwEQpiYBEKYmARCmJgEQpiYBEKYm
      ARCmJgEQppbRAOi6xmBPB03N54nGkwQnhmnt7EXXITg5RjSRXiOIEJmW0V+CZwMTJB0F1Hvj
      nGhqxo5OhVeld6KAib5Bdu4syuTTCZG2/wful7duzdYkZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1.3 Member' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.4 Round' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.1  ROUND vs Member' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.2 Member length' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.2 Non-Member length' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3 Map And duration' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3.4 Failure' width='192'>
      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
      /h/JxTBZktCXJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3.5 Success' width='192'>
      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
      yD709h8Pjfn/NvAcVDWWQNMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4 My Own' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
